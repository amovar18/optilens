{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const setdelivery = createAsyncThunk('order/setdelivery', async ({\n  product_id,\n  transaction_id\n}, {\n  getState,\n  rejectWithValue\n}) => {\n  const {\n    awb,\n    delivery_partner\n  } = getState().order;\n\n  try {\n    axios({\n      url: 'http://localhost:5000/order/setdelivery',\n      method: 'POST',\n      data: {\n        'product_id': product_id,\n        'transaction_id': transaction_id,\n        'awb': awb,\n        'delivery_partner': delivery_partner\n      }\n    }).then(response => {\n      return response.data;\n    });\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const getPending = createAsyncThunk('order/getPending', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get('http://localhost:5000/order/getallpending', {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const getAll = createAsyncThunk('order/getAll', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get('http://localhost:5000/order/getall', {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst orderSlice = createSlice({\n  name: 'order',\n  initialState: {\n    orders: [],\n    fetched: 'loading',\n    errorStatus: '',\n    errorMessage: '',\n    awb: '',\n    delivery_partner: ''\n  },\n  reducers: {\n    setValue: (state, action) => {\n      state[action.payload.name] = action.payload.value;\n    }\n  },\n  extraReducers: {\n    [getPending.fulfilled]: (state, action) => {\n      state.fetched = true;\n      state.order = action.payload;\n    },\n    [getPending.rejected]: (state, action) => {\n      state.fetched = true;\n      state.error = action.payload;\n    },\n    [getAll.fulfilled]: (state, action) => {\n      state.fetched = true;\n      state.orders = action.payload;\n    },\n    [getAll.rejected]: (state, action) => {\n      state.fetched = true;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  setValue\n} = orderSlice.actions;\nexport default orderSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/order/orderSlice.js"],"names":["createAsyncThunk","createSlice","axios","setdelivery","product_id","transaction_id","getState","rejectWithValue","awb","delivery_partner","order","url","method","data","then","response","error","getPending","_","get","withCredentials","getAll","orderSlice","name","initialState","orders","fetched","errorStatus","errorMessage","reducers","setValue","state","action","payload","value","extraReducers","fulfilled","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const setdelivery = createAsyncThunk(\r\n    'order/setdelivery',\r\n    async ({product_id, transaction_id}, { getState , rejectWithValue})=>{\r\n        const {awb, delivery_partner} = getState().order;\r\n        try{\r\n            axios({\r\n                url:'http://localhost:5000/order/setdelivery',\r\n                method:'POST',\r\n                data:{\r\n                    'product_id':product_id,\r\n\t\t\t\t\t'transaction_id':transaction_id,\r\n\t\t\t\t\t'awb':awb,\r\n\t\t\t\t\t'delivery_partner':delivery_partner\r\n                }\r\n            }).then((response)=>{\r\n                return response.data;\r\n            });\r\n        }catch(error){\r\n            return rejectWithValue(error.response.data);\r\n        }\r\n    }\r\n)\r\nexport const getPending = createAsyncThunk(\r\n    'order/getPending',\r\n    async (_, { rejectWithValue})=>{\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/order/getallpending',{withCredentials:true});\r\n            return response.data;\r\n        }catch(error){\r\n            return rejectWithValue(error.response.data);\r\n        }\r\n    }\r\n)\r\nexport const getAll = createAsyncThunk(\r\n    'order/getAll',\r\n    async (_, { rejectWithValue})=>{\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/order/getall',{withCredentials:true});\r\n            return response.data;\r\n        }catch(error){\r\n            return rejectWithValue(error.response.data);\r\n        }\r\n    }\r\n)\r\nconst orderSlice = createSlice({\r\n    name:'order',\r\n    initialState:{\r\n        orders:[],\r\n        fetched:'loading',\r\n        errorStatus:'',\r\n        errorMessage:'',\r\n\r\n        awb:'',\r\n\t\tdelivery_partner:'',\r\n    },\r\n    reducers:{\r\n        setValue:(state, action)=>{\r\n            state[action.payload.name] = action.payload.value;\r\n        }\r\n    },\r\n    extraReducers:{\r\n        [getPending.fulfilled]:(state,action)=>{\r\n            state.fetched = true;\r\n            state.order = action.payload;\r\n        },[getPending.rejected]:(state,action)=>{\r\n            state.fetched = true;\r\n            state.error = action.payload;\r\n        },[getAll.fulfilled]:(state, action)=>{\r\n            state.fetched = true;\r\n            state.orders = action.payload;\r\n        },[getAll.rejected]: (state, action)=>{\r\n            state.fetched = true;\r\n            state.error = action.payload;\r\n        }\r\n    }\r\n\r\n})\r\nexport const {setValue} = orderSlice.actions;\r\nexport default orderSlice.reducer;"]},"metadata":{},"sourceType":"module"}