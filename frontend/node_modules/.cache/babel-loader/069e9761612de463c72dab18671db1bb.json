{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const productSort = createAsyncThunk('product/Sort', async ({\n  getState\n}) => {\n  const {\n    type,\n    price,\n    sort,\n    page\n  } = getState().product;\n\n  try {\n    const response = await axios.get('http://localhost:5000/product/sort/' + type + '/' + price + '/' + sort + '/' + page, {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error.response.status);\n  }\n});\nexport const productGetSingle = createAsyncThunk('porduct/productGetSingle', async id => {\n  try {\n    const response = await axios.get('http://localhost:5000/product/getsingle/' + id, {\n      withCredentials: true,\n      data: {\n        'pid': id\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error.response.status);\n  }\n});\nexport const productGet = createAsyncThunk('product/productGet', async ({\n  getState\n}) => {\n  console.log(getState());\n  const {\n    type,\n    current_page,\n    price,\n    sort\n  } = getState().product;\n\n  try {\n    const response = await axios.get('http://localhost:5000/product/sort/' + type + '/' + price + '/' + sort + '/' + current_page, {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error.response.status);\n  }\n});\nexport const productAdd = createAsyncThunk('product/productAdd', async formData => {\n  try {\n    await axios({\n      method: 'POST',\n      url: 'http://localhost:5000/product/create',\n      withCredentials: true,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      data: formData\n    }).then(response => {\n      return response.data;\n    });\n  } catch (error) {\n    return Promise.reject(error.response.status);\n  }\n});\nconst productSlice = createSlice({\n  name: 'product',\n  initialState: {\n    products: [],\n    singleProduct: [],\n    shopname: [],\n    total_pages: 0,\n    current_page: 1,\n    sort: 'NAN',\n    type: 'all',\n    price: 'NAN',\n    productname: '',\n    productprice: 0,\n    producttype: '',\n    productdescription: '',\n    brand: '',\n    stored: false\n  },\n  reducers: {\n    setValue: (state, action) => {\n      state[action.payload.name] = action.payload.value;\n    }\n  },\n  extraReducers: {\n    [productSort.fulfilled]: (state, action) => {\n      state.products = action.payload.products;\n      state.total_pages = action.payload.total_pages;\n    },\n    [productGetSingle.fulfilled]: (state, action) => {\n      state.singleProduct = action.payload;\n    },\n    [productGet.fulfilled]: (state, action) => {\n      state.products = action.payload;\n    },\n    [productAdd.fulfilled]: (state, action) => {\n      state.stored = true;\n    },\n    [productAdd.rejected]: (state, action) => {\n      state.stored = true;\n    },\n    [productAdd.pending]: (state, action) => {\n      state.stored = false;\n    }\n  }\n});\nexport const {\n  setValue\n} = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/product/productSlice.js"],"names":["createAsyncThunk","createSlice","axios","productSort","getState","type","price","sort","page","product","response","get","withCredentials","data","error","Promise","reject","status","productGetSingle","id","productGet","console","log","current_page","productAdd","formData","method","url","headers","then","productSlice","name","initialState","products","singleProduct","shopname","total_pages","productname","productprice","producttype","productdescription","brand","stored","reducers","setValue","state","action","payload","value","extraReducers","fulfilled","rejected","pending","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nexport const productSort = createAsyncThunk(\r\n    'product/Sort',\r\n    async ({getState})=>{\r\n        const {type, price, sort, page} = getState().product;\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/product/sort/'+type+'/'+price+'/'+sort+'/'+page,{withCredentials:true});\r\n            return response.data;\r\n        }catch(error){\r\n            return Promise.reject(error.response.status);\r\n        }\r\n    }\r\n)\r\nexport const productGetSingle = createAsyncThunk(\r\n    'porduct/productGetSingle',\r\n    async (id)=>{\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/product/getsingle/'+id,{withCredentials:true,data:{'pid':id}});\r\n            return response.data;\r\n        }catch(error){\r\n            return Promise.reject(error.response.status);\r\n        }\r\n    }\r\n)\r\nexport const productGet = createAsyncThunk(\r\n    'product/productGet',\r\n    async ({getState})=>{\r\n        console.log(getState())\r\n        const {type, current_page, price, sort} = getState().product;\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/product/sort/'+type+'/'+price+'/'+sort+'/'+current_page,{withCredentials:true});\r\n            return response.data;\r\n        }catch(error){\r\n            return Promise.reject(error.response.status);\r\n        }    \r\n    }\r\n)\r\nexport const productAdd = createAsyncThunk(\r\n    'product/productAdd',\r\n    async (formData)=>{\r\n        try{\r\n            await axios({\r\n                method:'POST',\r\n                url:'http://localhost:5000/product/create',\r\n                withCredentials:true,\r\n                headers:{'Content-Type':'multipart/form-data'},\r\n                data:formData\r\n            }).then((response)=>{\r\n                return response.data;\r\n            });\r\n            \r\n        }catch(error){\r\n            return Promise.reject(error.response.status);\r\n        }\r\n    }\r\n)\r\nconst productSlice = createSlice({\r\n    name:'product',\r\n    initialState:{\r\n        products:[],\r\n        singleProduct:[],\r\n        shopname:[],\r\n        total_pages:0,\r\n        current_page:1,\r\n        sort:'NAN',\r\n        type:'all',\r\n        price:'NAN',\r\n\r\n        productname:'',\r\n        productprice:0,\r\n        producttype:'',\r\n        productdescription:'',\r\n        brand:'',\r\n        stored:false\r\n    },\r\n    reducers:{\r\n        setValue:(state, action)=>{\r\n            state[action.payload.name] = action.payload.value;\r\n        }\r\n    },\r\n    extraReducers:{\r\n        [productSort.fulfilled]:(state, action)=>{\r\n            state.products = action.payload.products;\r\n            state.total_pages = action.payload.total_pages;\r\n        },[productGetSingle.fulfilled]:(state,action)=>{\r\n            state.singleProduct=action.payload;\r\n        },[productGet.fulfilled]:(state, action)=>{\r\n            state.products=action.payload;\r\n        },[productAdd.fulfilled]:(state, action)=>{\r\n            state.stored = true;\r\n        },[productAdd.rejected]:(state, action)=>{\r\n            state.stored = true;\r\n        },[productAdd.pending]:(state, action)=>{\r\n            state.stored = false;\r\n        }\r\n    }\r\n\r\n})\r\nexport const {setValue} = productSlice.actions;\r\nexport default productSlice.reducer;"]},"metadata":{},"sourceType":"module"}