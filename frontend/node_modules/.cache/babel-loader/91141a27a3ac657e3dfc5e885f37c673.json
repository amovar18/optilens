{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getSingle = createAsyncThunk('transaction/getSingle', async (id, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.delete('http://localhost:5000/cart/delete', {\n      withCredentials: true,\n      data: {\n        'pid': id\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const getAll = createAsyncThunk('transaction/getAll', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    console.log('here');\n    const response = await axios.get('http://localhost:5000/transaction/', {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst transactionSlice = createSlice({\n  name: 'transaction',\n  initialState: {\n    transaction: [],\n    error: '',\n    fetched: 'loading'\n  },\n  reducers: {},\n  extraReducers: {\n    [getSingle.fulfilled]: (state, action) => {\n      state.fetched = true;\n      state.transaction = action.payload;\n    },\n    [getSingle.rejected]: (state, action) => {\n      state.fetched = true;\n      state.error = action.payload;\n    },\n    [getAll.fulfilled]: (state, action) => {\n      state.fetched = true;\n      state.transaction = action.payload;\n    },\n    [getAll.rejected]: (state, action) => {\n      state.fetched = true;\n      state.error = action.payload;\n    }\n  }\n});\nexport default transactionSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/transaction/transactionSlice.js"],"names":["createAsyncThunk","createSlice","axios","getSingle","id","rejectWithValue","response","delete","withCredentials","data","error","getAll","_","console","log","get","transactionSlice","name","initialState","transaction","fetched","reducers","extraReducers","fulfilled","state","action","payload","rejected","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CACrC,uBADqC,EAErC,OAAOI,EAAP,EAAW;AAACC,EAAAA;AAAD,CAAX,KAA+B;AAC3B,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,MAAN,CAAa,mCAAb,EAAiD;AAACC,MAAAA,eAAe,EAAC,IAAjB;AAAsBC,MAAAA,IAAI,EAAC;AAAC,eAAML;AAAP;AAA3B,KAAjD,CAAvB;AACA,WAAOE,QAAQ,CAACG,IAAhB;AACH,GAHD,CAGC,OAAMC,KAAN,EAAY;AACT,WAAOL,eAAe,CAACK,KAAK,CAACJ,QAAN,CAAeG,IAAhB,CAAtB;AACH;AACJ,CAToC,CAAlC;AAWP,OAAO,MAAME,MAAM,GAAGX,gBAAgB,CAClC,oBADkC,EAElC,OAAOY,CAAP,EAAU;AAAEP,EAAAA;AAAF,CAAV,KAA+B;AAC3B,MAAG;AACCQ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACa,GAAN,CAAU,oCAAV,EAA+C;AAACP,MAAAA,eAAe,EAAC;AAAjB,KAA/C,CAAvB;AACA,WAAOF,QAAQ,CAACG,IAAhB;AACH,GAJD,CAIC,OAAMC,KAAN,EAAY;AACT,WAAOL,eAAe,CAACK,KAAK,CAACJ,QAAN,CAAeG,IAAhB,CAAtB;AACH;AACJ,CAViC,CAA/B;AAYP,MAAMO,gBAAgB,GAAGf,WAAW,CAAC;AACjCgB,EAAAA,IAAI,EAAC,aAD4B;AAEjCC,EAAAA,YAAY,EAAC;AACTC,IAAAA,WAAW,EAAC,EADH;AAETT,IAAAA,KAAK,EAAC,EAFG;AAGTU,IAAAA,OAAO,EAAC;AAHC,GAFoB;AAOjCC,EAAAA,QAAQ,EAAC,EAPwB;AAQjCC,EAAAA,aAAa,EAAC;AACV,KAACnB,SAAS,CAACoB,SAAX,GAAsB,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAClCD,MAAAA,KAAK,CAACJ,OAAN,GAAc,IAAd;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAkBM,MAAM,CAACC,OAAzB;AAEH,KALS;AAKR,KAACvB,SAAS,CAACwB,QAAX,GAAqB,CAACH,KAAD,EAAOC,MAAP,KAAgB;AACnCD,MAAAA,KAAK,CAACJ,OAAN,GAAc,IAAd;AACAI,MAAAA,KAAK,CAACd,KAAN,GAAYe,MAAM,CAACC,OAAnB;AACH,KARS;AAQR,KAACf,MAAM,CAACY,SAAR,GAAmB,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAClCD,MAAAA,KAAK,CAACJ,OAAN,GAAc,IAAd;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAkBM,MAAM,CAACC,OAAzB;AACH,KAXS;AAWR,KAACf,MAAM,CAACgB,QAAR,GAAmB,CAACH,KAAD,EAAQC,MAAR,KAAiB;AAClCD,MAAAA,KAAK,CAACJ,OAAN,GAAc,IAAd;AACAI,MAAAA,KAAK,CAACd,KAAN,GAAYe,MAAM,CAACC,OAAnB;AACH;AAdS;AARmB,CAAD,CAApC;AA0BA,eAAeV,gBAAgB,CAACY,OAAhC","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const getSingle = createAsyncThunk(\r\n    'transaction/getSingle',\r\n    async (id, {rejectWithValue})=>{\r\n        try{\r\n            const response = await axios.delete('http://localhost:5000/cart/delete',{withCredentials:true,data:{'pid':id}});\r\n            return response.data;\r\n        }catch(error){\r\n            return rejectWithValue(error.response.data);\r\n        }\r\n    }\r\n)\r\nexport const getAll = createAsyncThunk(\r\n    'transaction/getAll',\r\n    async (_, { rejectWithValue})=>{\r\n        try{\r\n            console.log('here');\r\n            const response = await axios.get('http://localhost:5000/transaction/',{withCredentials:true});\r\n            return response.data;\r\n        }catch(error){\r\n            return rejectWithValue(error.response.data);\r\n        }\r\n    }\r\n)\r\nconst transactionSlice = createSlice({\r\n    name:'transaction',\r\n    initialState:{\r\n        transaction:[],\r\n        error:'',\r\n        fetched:'loading'\r\n    },\r\n    reducers:{},\r\n    extraReducers:{\r\n        [getSingle.fulfilled]:(state,action)=>{\r\n            state.fetched=true;\r\n            state.transaction=action.payload;\r\n            \r\n        },[getSingle.rejected]:(state,action)=>{\r\n            state.fetched=true;\r\n            state.error=action.payload;\r\n        },[getAll.fulfilled]:(state, action)=>{\r\n            state.fetched=true;\r\n            state.transaction=action.payload;\r\n        },[getAll.rejected]: (state, action)=>{\r\n            state.fetched=true;\r\n            state.error=action.payload;\r\n        }\r\n    }\r\n\r\n})\r\nexport default transactionSlice.reducer;"]},"metadata":{},"sourceType":"module"}