{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geeta\\\\opticonnect\\\\frontend\\\\src\\\\components\\\\Privateroute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const [isloggedin, setloggedin] = useState(false);\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: 'http://localhost:4000/auth/verify',\n      withCredentials: true,\n      data: {}\n    }).then(response => {\n      setloggedin(true);\n    }, error => {\n      setloggedin(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isloggedin ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PrivateRoute, \"iNxTn4UReQRAzGBIRK3GrJqTrqo=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/components/Privateroute.js"],"names":["React","useState","useEffect","Redirect","Route","axios","PrivateRoute","component","Component","rest","isloggedin","setloggedin","method","url","withCredentials","data","then","response","error","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,QAAR,EAAmBC,KAAnB,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AAAA;;AACtD,QAAK,CAACC,UAAD,EAAYC,WAAZ,IAAyBV,QAAQ,CAAC,KAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAAC;AACFO,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE,mCAFH;AAGFC,MAAAA,eAAe,EAAE,IAHf;AAIFC,MAAAA,IAAI,EAAE;AAJJ,KAAD,CAAL,CAKGC,IALH,CAKSC,QAAD,IAAc;AAClBN,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAPD,EAOIO,KAAD,IAAW;AACVP,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KATD;AAWD,GAZM,EAYJ,EAZI,CAAT;AAcA,sBACI,QAAC,KAAD,OAAWF,IAAX;AAAiB,IAAA,MAAM,EAAEU,KAAK,IAC1BT,UAAU,gBAAE,QAAC,SAAD,OAAeS;AAAf;AAAA;AAAA;AAAA;AAAA,YAAF,gBAA4B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAD1C;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAtBD;;GAAMb,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {Redirect , Route} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    const[isloggedin,setloggedin]=useState(false);\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:4000/auth/verify',\r\n            withCredentials: true,\r\n            data: {}\r\n        }).then((response) => {\r\n            setloggedin(true);\r\n        }, (error) => {\r\n            setloggedin(false);\r\n        });    \r\n        \r\n      }, []);\r\n    \r\n    return (\r\n        <Route {...rest} render={props => (\r\n            isloggedin ?<Component {...props} />: <Redirect to=\"/login\" />\r\n        )} />\r\n        \r\n    );\r\n};\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}