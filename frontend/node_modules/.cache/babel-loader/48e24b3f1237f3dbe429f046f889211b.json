{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const productSort = createAsyncThunk('product/Sort', async (type, price, sort) => {\n  const response = await axios.get('http://localhost:5000/product/sort/' + type + '/' + price + '/' + sort, {\n    withCredentials: true\n  });\n  return response.data;\n});\nexport const productGetSingle = createAsyncThunk('porduct/productGetSingle', async id => {\n  const response = await axios.get('http://localhost:5000/product/getsingle/' + id, {\n    withCredentials: true,\n    data: {\n      'pid': id\n    }\n  });\n  return response.data;\n});\nexport const productGet = createAsyncThunk('product/productGet', async (type, page) => {\n  const response = await axios.get('http://localhost:5000/product/' + type + '/' + page, {\n    withCredentials: true\n  });\n  return response.status;\n});\nexport const productAdd = createAsyncThunk('product/productAdd', async (formData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('http://localhost:5000/product/create', {\n      withCredentials: true,\n      Headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      data: formData\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.status);\n  }\n});\nconst productSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    products: [],\n    singleProduct: [],\n    total_pages: 0,\n    sort: false\n  },\n  reducers: {},\n  extraReducers: {\n    [productSort.fulfilled]: (state, action) => {\n      state.push(action.payload);\n    },\n    [productGetSingle.fulfilled]: (state, action) => {\n      state.singleProduct = action.payload;\n      return state;\n    },\n    [productGet.fulfilled]: (state, action) => {\n      state = action.payload;\n      return state;\n    },\n    [productAdd.fulfilled]: (state, action) => {\n      return action.payload;\n    },\n    [productAdd.rejected]: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nexport default productSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/product/productSlice.js"],"names":["createAsyncThunk","createSlice","axios","productSort","type","price","sort","response","get","withCredentials","data","productGetSingle","id","productGet","page","status","productAdd","formData","rejectWithValue","post","Headers","error","productSlice","name","initialState","products","singleProduct","total_pages","reducers","extraReducers","fulfilled","state","action","push","payload","rejected","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nexport const productSort = createAsyncThunk(\r\n    'product/Sort',\r\n    async (type, price, sort)=>{\r\n        const response = await axios.get('http://localhost:5000/product/sort/'+type+'/'+price+'/'+sort,{withCredentials:true});\r\n        return response.data;\r\n    }\r\n)\r\nexport const productGetSingle = createAsyncThunk(\r\n    'porduct/productGetSingle',\r\n    async (id)=>{\r\n        const response = await axios.get('http://localhost:5000/product/getsingle/'+id,{withCredentials:true,data:{'pid':id}});\r\n        return response.data;\r\n    }\r\n)\r\nexport const productGet = createAsyncThunk(\r\n    'product/productGet',\r\n    async (type, page)=>{\r\n        const response = await axios.get('http://localhost:5000/product/'+type+'/'+page,{withCredentials:true});\r\n        return response.status;\r\n    }\r\n)\r\nexport const productAdd = createAsyncThunk(\r\n    'product/productAdd',\r\n    async (formData, {rejectWithValue})=>{\r\n        try{\r\n            const response = await axios.post('http://localhost:5000/product/create',{withCredentials:true,Headers:{'Content-Type':'multipart/form-data'},data:formData});\r\n            return response.data;\r\n        }catch(error){\r\n            return rejectWithValue(error.response.status);\r\n        }\r\n    }\r\n)\r\nconst productSlice = createSlice({\r\n    name:'cart',\r\n    initialState:{\r\n        products:[],\r\n        singleProduct:[],\r\n        total_pages:0,\r\n        sort:false\r\n    },\r\n    reducers:{},\r\n    extraReducers:{\r\n        [productSort.fulfilled]:(state, action)=>{\r\n            state.push(action.payload);\r\n        },\r\n        [productGetSingle.fulfilled]:(state,action)=>{\r\n            state.singleProduct=action.payload;\r\n            return state;\r\n        },\r\n        [productGet.fulfilled]:(state, action)=>{\r\n            state=action.payload;\r\n            return state;\r\n        },\r\n        [productAdd.fulfilled]:(state, action)=>{\r\n            return action.payload;\r\n        },\r\n        [productAdd.rejected]:(state, action)=>{\r\n            return action.payload;\r\n        }\r\n    }\r\n\r\n})\r\nexport default productSlice.reducer;"]},"metadata":{},"sourceType":"module"}