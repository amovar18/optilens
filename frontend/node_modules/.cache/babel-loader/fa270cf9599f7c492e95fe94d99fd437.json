{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geeta\\\\opticonnect\\\\frontend\\\\src\\\\components\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Alert from './alert';\nimport Loadingspinner from './Loadingspinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [status, setloggedstatus] = useState('');\n  const [criteriaerror, setcriteriaerror] = useState('');\n  const [passwordmatch, setpasswordmatcherror] = useState(''); //for user registration\n\n  const [name, setname] = useState('');\n  const [address, setaddress] = useState('');\n  const [regemail, setemail] = useState('');\n  const [regpassword, setregpassword] = useState('');\n  const [confirmpassword, setconfirmpassword] = useState('');\n  const [regusername, setregusername] = useState('');\n  const [phone, setphone] = useState('');\n  const [availability, setavailability] = useState('');\n\n  const checkpasswords = () => {\n    if (regpassword !== undefined && confirmpassword !== undefined) {\n      if (regpassword !== '') {\n        let regex = RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\n\n        if (regex.test(regpassword) === true) {\n          seterrormessage('');\n          setcriteriaerror(false);\n          return;\n        } else {\n          seterrormessage('Passwords do not meet the criteria.');\n          setcriteriaerror(true);\n          return;\n        }\n      }\n\n      if (regpassword !== confirmpassword) {\n        seterrormessage('Passwords not equal');\n        setpasswordmatcherror(true);\n      } else {\n        seterrormessage('Passwords equal');\n        setpasswordmatcherror(false);\n      }\n    }\n  };\n\n  const checkabailability = () => {\n    if (regusername !== '') {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/user/availability' + regusername\n      }).then(response => {\n        setavailability(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/auth/getstatus'\n    }).then(response => {\n      setloggedstatus(true);\n    }).catch(error => {\n      setloggedstatus(false);\n    });\n  });\n\n  const submitValueRegister = () => {\n    if (availability === true) {\n      axios({\n        method: 'POST',\n        url: 'http://localhost:5000/user/login',\n        data: {\n          'name': name,\n          'username': regusername,\n          'phone': phone,\n          'email': regemail,\n          'password': regpassword,\n          'address': address\n        }\n      });\n    }\n  }; // for login\n\n\n  const [logusername, setlogusername] = useState('');\n  const [logpassword, setlogpassword] = useState('');\n  const [typeofuser, settypeofuser] = useState('Customer');\n  const [error, seterror] = useState('');\n\n  const submitValueLog = e => {\n    e.preventDefault();\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/auth/signin',\n      withCredentials: true,\n      data: {\n        'username': logusername,\n        'password': logpassword,\n        'typeofuser': typeofuser\n      }\n    }).then(response => {\n      window.location = 'http://localhost:3000/';\n    }, error => {\n      if (error.response.status === 404) {\n        seterror('Username or password is wrong');\n      }\n    });\n  };\n\n  if (status === '') {\n    return /*#__PURE__*/_jsxDEV(Loadingspinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 16\n    }, this);\n  } else if (status === true) {\n    return window.location = 'http://localhost:3000/';\n  } else {\n    console.log(errormessage);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'height': '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-6\",\n              children: \"Login to your account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: submitValueLog,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                placeholder: \"Username\",\n                id: \"username\",\n                type: \"text\",\n                onChange: e => setlogusername(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 162\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                placeholder: \"Password\",\n                id: \"password\",\n                type: \"password\",\n                onChange: e => setlogpassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 175\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check form-check-inline\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  className: \"form-check-input\",\n                  name: \"typeofuser\",\n                  id: \"customer\",\n                  value: \"customer\",\n                  onChange: e => settypeofuser(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"customer\",\n                  className: \"form-check-label\",\n                  style: {\n                    'color': '#000000'\n                  },\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check form-check-inline\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  className: \"form-check-input\",\n                  name: \"typeofuser\",\n                  value: \"seller\",\n                  onChange: e => settypeofuser(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"seller\",\n                  className: \"form-check-label\",\n                  style: {\n                    'color': '#000000'\n                  },\n                  children: \"Seller\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), error === '' ? null : /*#__PURE__*/_jsxDEV(Alert, {\n                message: error,\n                type: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 52\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/forgotpassword\",\n                children: \"Forgot Password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 79\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                tag: \"input\",\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                'color': '#000000'\n              },\n              children: \"OR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-6\",\n              children: \"New User Signup!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: submitValueRegister,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Name\",\n                onChange: e => setname(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 146\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                placeholder: \"Email\",\n                onChange: e => setemail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 150\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Username\",\n                onChange: e => setregusername(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 157\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: checkabailability,\n                className: \"btn btn-primary\",\n                children: \"Check availability\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 162\n              }, this), availability === true ? /*#__PURE__*/_jsxDEV(Alert, {\n                message: \"Username available\",\n                type: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 56\n              }, this) : availability === false ? /*#__PURE__*/_jsxDEV(Alert, {\n                message: \"Username not available\",\n                type: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 135\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                placeholder: \"Password\",\n                onChange: e => setregpassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 161\n              }, this), criteriaerror === true ? /*#__PURE__*/_jsxDEV(Alert, {\n                message: \"Passwords do not match criteria\",\n                type: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 59\n              }, this) : criteriaerror === false ? /*#__PURE__*/_jsxDEV(Alert, {\n                message: \"Passwords match criteria\",\n                type: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 149\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                placeholder: \"Confirm Password\",\n                onChange: e => setconfirmpassword(e.target.value),\n                onKeyUp: checkpasswords,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 198\n              }, this), passwordmatch === true ? /*#__PURE__*/_jsxDEV(Alert, {\n                message: \"Passwords do not match\",\n                type: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 59\n              }, this) : passwordmatch === false ? /*#__PURE__*/_jsxDEV(Alert, {\n                message: \"Passwords match\",\n                type: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 140\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                className: \"form-control\",\n                placeholder: \"Phone\",\n                onChange: e => setphone(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 147\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                as: \"textarea\",\n                className: \"form-control\",\n                placeholder: \"Address\",\n                onChange: e => setaddress(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 145\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/registerseller\",\n                  children: \"Want to sell with us ?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 104\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 109\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Signup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Login, \"oMmJa2aQbJxj3HynLpVBvNJtulE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/components/login.js"],"names":["React","useEffect","useState","Link","axios","Alert","Loadingspinner","Login","status","setloggedstatus","criteriaerror","setcriteriaerror","passwordmatch","setpasswordmatcherror","name","setname","address","setaddress","regemail","setemail","regpassword","setregpassword","confirmpassword","setconfirmpassword","regusername","setregusername","phone","setphone","availability","setavailability","checkpasswords","undefined","regex","RegExp","test","seterrormessage","checkabailability","method","url","then","response","data","catch","error","console","log","submitValueRegister","logusername","setlogusername","logpassword","setlogpassword","typeofuser","settypeofuser","seterror","submitValueLog","e","preventDefault","withCredentials","window","location","errormessage","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Alert from './alert';\r\nimport Loadingspinner from './Loadingspinner';\r\nfunction Login(){\r\n    const [status,setloggedstatus]=useState('');\r\n    const [criteriaerror,setcriteriaerror] = useState('');\r\n    const [passwordmatch,setpasswordmatcherror] = useState('');\r\n\r\n    //for user registration\r\n    const [name,setname]=useState('');\r\n    const [address,setaddress]=useState('');\r\n    const [regemail,setemail]=useState('');\r\n    const [regpassword,setregpassword]=useState('');\r\n    const [confirmpassword,setconfirmpassword]=useState('');\r\n    const [regusername,setregusername]=useState('');\r\n    const [phone,setphone]=useState('');\r\n    const [availability,setavailability]=useState('');\r\n    const checkpasswords = () =>{\r\n        if (regpassword !== undefined && confirmpassword !== undefined) {  \r\n            if(regpassword!==''){\r\n                let regex=RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\r\n                if(regex.test(regpassword)===true){\r\n                    seterrormessage('');\r\n                    setcriteriaerror(false);\r\n                    return;\r\n                }else{\r\n                    seterrormessage('Passwords do not meet the criteria.');\r\n                    setcriteriaerror(true);\r\n                    return;\r\n                }\r\n            }\r\n            if (regpassword !== confirmpassword) {\r\n                seterrormessage('Passwords not equal');\r\n                setpasswordmatcherror(true);\r\n            }else{\r\n                seterrormessage('Passwords equal');\r\n                setpasswordmatcherror(false);\r\n            }\r\n        }\r\n    }\r\n    const checkabailability=()=>{\r\n        if(regusername!==''){\r\n            axios({\r\n                method: 'GET',\r\n                url: 'http://localhost:5000/user/availability'+regusername,\r\n            }).then((response)=>{\r\n                setavailability(response.data);\r\n            }).catch((error)=>{\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:5000/auth/getstatus',\r\n        }).then((response)=>{\r\n            setloggedstatus(true);\r\n        }).catch((error)=>{\r\n            setloggedstatus(false);\r\n        });\r\n    });\r\n    const submitValueRegister = () => {\r\n        if(availability===true){\r\n            axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/user/login',\r\n                data: {\r\n                    'name' : name,\r\n                    'username' : regusername,\r\n                    'phone' : phone,\r\n                    'email' : regemail,\r\n                    'password' : regpassword,\r\n                    'address': address\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // for login\r\n    const [logusername,setlogusername]=useState('');\r\n    const [logpassword,setlogpassword]=useState('');\r\n    const [typeofuser,settypeofuser]=useState('Customer');\r\n    const [error,seterror]=useState('');\r\n    const submitValueLog = (e) => {\r\n        e.preventDefault();\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:5000/auth/signin',\r\n            withCredentials: true,\r\n            data: {\r\n                'username' : logusername,\r\n                'password' : logpassword,\r\n                'typeofuser':typeofuser\r\n            }\r\n          }).then((response) => {\r\n                window.location='http://localhost:3000/';\r\n          }, (error) => {\r\n                if(error.response.status===404){\r\n                    seterror('Username or password is wrong');\r\n                }\r\n          });\r\n    }\r\n    if(status===''){\r\n        return(<Loadingspinner/>);\r\n    }else if(status===true){\r\n        return(window.location='http://localhost:3000/');\r\n    }else{\r\n        console.log(errormessage);\r\n        return (\r\n            <div style={{'height':'100%'}}>\r\n                <div className='container'>\r\n                    <div className='row align-items-center'>\r\n                        <div className='col-sm'>\r\n                            <h1 className='display-6'>Login to your account</h1>\r\n                            <form onSubmit={submitValueLog}>\r\n                                <input className='form-control' placeholder='Username' id='username' type='text' onChange={e => setlogusername(e.target.value)}/><br/>\r\n                                <input className='form-control' placeholder='Password' id='password' type='password' onChange={e => setlogpassword(e.target.value)} required/><br/>\r\n                                <br/>\r\n                                <div className='form-check form-check-inline'>\r\n                                    <input type='radio' className='form-check-input' name='typeofuser' id='customer' value='customer' onChange={e => settypeofuser(e.target.value)}/>\r\n                                    <label htmlFor='customer' className='form-check-label' style={{'color':'#000000'}}>Customer</label>\r\n                                </div>\r\n                                <div className='form-check form-check-inline'>\r\n                                    <input type='radio' className='form-check-input' name='typeofuser' value='seller' onChange={e => settypeofuser(e.target.value)}/>\r\n                                    <label htmlFor='seller' className='form-check-label' style={{'color':'#000000'}}>Seller</label>\r\n                                </div>\r\n                                {error === ''?null:<Alert message={error} type='danger'/>}\r\n                                <a href=\"/forgotpassword\">Forgot Password?</a><br/>\r\n                                <br/><button tag='input' type='submit' className='btn btn-primary'>Submit</button>\r\n                            </form>\r\n                        </div>\r\n                        <div className='col-sm text-center'>\r\n                            <h2 style={{'color':'#000000'}}>OR</h2>\r\n                        </div><br/>\r\n                        <div className='col-sm'>\r\n                            <h1 className='display-6'>New User Signup!</h1>\r\n                            <form onSubmit={submitValueRegister}>\r\n                                <input type=\"text\" className='form-control' placeholder=\"Name\" onChange={e => setname(e.target.value)} required/><br/>\r\n                                <input type=\"email\" className='form-control' placeholder=\"Email\"  onChange={e => setemail(e.target.value)} required/><br/>\r\n                                <input type=\"text\" className='form-control' placeholder=\"Username\" onChange={e => setregusername(e.target.value)} required/><br/><button onClick={checkabailability} className='btn btn-primary'>Check availability</button>\r\n                                {availability===true ? <Alert message='Username available' type='success'/>: availability === false ? <Alert message='Username not available' type='danger'/> :null}\r\n                                <br/>\r\n                                <input type=\"password\" className='form-control' placeholder=\"Password\" onChange={e => setregpassword(e.target.value)} required/><br/>\r\n                                {criteriaerror === true ? <Alert message='Passwords do not match criteria' type='danger'/>:criteriaerror === false? <Alert message='Passwords match criteria' type='success'/> :null}\r\n                                <input type=\"password\" className='form-control' placeholder=\"Confirm Password\" onChange={e => setconfirmpassword(e.target.value)} onKeyUp={checkpasswords} required/><br/>\r\n                                {passwordmatch === true ? <Alert message='Passwords do not match' type='danger'/>:passwordmatch === false? <Alert message='Passwords match' type='success'/> :null}\r\n                                <input type=\"tel\" className='form-control' placeholder=\"Phone\" onChange={e => setphone(e.target.value)} required/><br/>\r\n                                <input as=\"textarea\" className='form-control' placeholder=\"Address\" onChange={e => setaddress(e.target.value)}/><br/>\r\n                                <small><Link to=\"/registerseller\">Want to sell with us ?</Link></small><br/><br/>\r\n                                <button type='submit' className='btn btn-primary'>Signup</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>       \r\n            </div>             \r\n        );\r\n    }\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}