{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geeta\\\\opticonnect\\\\frontend\\\\src\\\\components\\\\logout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { userDeauth } from '../slices/authentication/authenticationSlice';\nimport Loadingspinner from './Loadingspinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Logout() {\n  _s();\n\n  const loggingout = useRef(false);\n  const {\n    isAuthenticated\n  } = useSelector(state => state.authentication);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(userDeauth());\n    loggingout.current = true; // eslint-disable-next-line\n  }, [loggingout]);\n\n  if (loggingout.current === false) {\n    return /*#__PURE__*/_jsxDEV(Loadingspinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  } else if (isAuthenticated === false && loggingout.current === true) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(Logout, \"BPmUgaPRVlOpi2Ra1nOeIGctYME=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Logout;\nexport default Logout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/components/logout.js"],"names":["React","useEffect","useRef","useDispatch","useSelector","Redirect","userDeauth","Loadingspinner","Logout","loggingout","isAuthenticated","state","authentication","dispatch","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAAQC,UAAR,QAAyB,8CAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AACA,SAASC,MAAT,GAAiB;AAAA;;AACb,QAAMC,UAAU,GAAGP,MAAM,CAAC,KAAD,CAAzB;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAoBN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAArC;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACAG,IAAAA,UAAU,CAACK,OAAX,GAAqB,IAArB,CAFU,CAGV;AACH,GAJQ,EAIP,CAACL,UAAD,CAJO,CAAT;;AAKA,MAAGA,UAAU,CAACK,OAAX,KAAuB,KAA1B,EAAgC;AAC5B,wBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEM,IAAGJ,eAAe,KAAK,KAApB,IAA6BD,UAAU,CAACK,OAAX,KAAuB,IAAvD,EAA4D;AAC9D,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AAEF;;GAfMN,M;UAEqBJ,W,EACTD,W;;;KAHZK,M;AAkBT,eAAeA,MAAf","sourcesContent":["import React,{ useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport {userDeauth} from '../slices/authentication/authenticationSlice'\r\nimport Loadingspinner from './Loadingspinner';\r\nfunction Logout(){\r\n    const loggingout = useRef(false);\r\n    const {isAuthenticated} = useSelector(state => state.authentication); \r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(userDeauth());\r\n        loggingout.current = true;\r\n        // eslint-disable-next-line\r\n    },[loggingout]);\r\n    if(loggingout.current === false){\r\n        return(<Loadingspinner/>);\r\n    }else if(isAuthenticated === false && loggingout.current === true){\r\n        return(<Redirect to='/login'/>);\r\n    }\r\n      \r\n  }\r\n\r\n\r\nexport default Logout;\r\n"]},"metadata":{},"sourceType":"module"}