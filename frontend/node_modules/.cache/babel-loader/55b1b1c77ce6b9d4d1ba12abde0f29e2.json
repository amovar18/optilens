{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const userAuth = createAsyncThunk('authentication/userAuth', async ({\n  getState\n}) => {\n  const {\n    loginUsername,\n    loginPassword,\n    typeofuser\n  } = getState().authentication;\n\n  try {\n    const response = axios.post('http://localhost:5000/auth/signin', {\n      'username': loginUsername,\n      'password': loginPassword,\n      'typeofuser': typeofuser\n    }, {\n      withCredentials: true\n    });\n    return (await response).data;\n  } catch (err) {\n    return Promise.reject(401);\n  }\n});\nexport const refreshToken = createAsyncThunk('authentication/refreshToken', async () => {\n  try {\n    const response = axios.get('http://localhost:5000/auth/getstatus', {\n      withCredentials: true\n    });\n    return (await response).data;\n  } catch (err) {\n    return Promise.reject(401);\n  }\n});\nexport const checkUsernameAvailability = createAsyncThunk('authentication/checkUsernameAvailability', async ({\n  getState\n}) => {\n  const {\n    Registration_username\n  } = getState().authentication;\n\n  if (Registration_username !== '') {\n    try {\n      const response = axios.get('http://localhost:5000/user/availability/' + Registration_username, {\n        withCredentials: true\n      });\n      return (await response).data;\n    } catch (err) {\n      return Promise.reject(401);\n    }\n  }\n});\nexport const createCustomer = createAsyncThunk('authentication/create', async ({\n  getState\n}) => {\n  const {\n    Registration_username,\n    Registration_password,\n    Registration_name,\n    Registration_email,\n    Registration_address,\n    Registration_phone\n  } = getState().authentication;\n\n  try {\n    const response = axios.post('http://localhost:5000/user/create', {\n      'name': Registration_name,\n      'username': Registration_username,\n      'phone': Registration_phone,\n      'email': Registration_email,\n      'password': Registration_password,\n      'address': Registration_address\n    }, {\n      withCredentials: true\n    });\n    return (await response).data;\n  } catch (err) {\n    return Promise.reject(401);\n  }\n});\nexport const userDeauth = createAsyncThunk('authentication/userDeauth', async () => {\n  try {\n    const response = await axios.get('http://localhost:5000/auth/signout', {\n      withCredentials: true\n    });\n    return response.status;\n  } catch (error) {\n    return Promise.reject(500);\n  }\n});\nconst authenticationSlice = createSlice({\n  name: 'authentication',\n  initialState: {\n    userType: '',\n    isAuthenticated: 'loading',\n    user: {},\n    loginUsername: '',\n    loginPassword: '',\n    typeofuser: '',\n    error: '',\n    generallinks: [{\n      title: 'Home',\n      path: '/'\n    }, {\n      title: `About us`,\n      path: `/about`\n    }, {\n      title: `Product`,\n      path: `/product/all`\n    }, {\n      title: `FAQ`,\n      path: `/faq`\n    }, {\n      title: `Login`,\n      path: `/login`\n    }],\n    customerLinks: [{\n      title: 'Home',\n      path: '/'\n    }, {\n      title: `Product`,\n      path: `/product/all/1`\n    }, {\n      title: `FAQ`,\n      path: `/faq`\n    }, {\n      title: `About us`,\n      path: `/about`\n    }, {\n      title: `Cart`,\n      path: `/cart`\n    }, {\n      title: `Your Orders`,\n      path: `/yorders`\n    }, {\n      title: `Logout`,\n      path: `/logout`\n    }],\n    sellerlinks: [{\n      title: 'Home',\n      path: '/'\n    }, {\n      title: `About us`,\n      path: `/about`\n    }, {\n      title: `Insert Products`,\n      path: `/insertproduct`\n    }, {\n      title: `All Orders`,\n      path: `/recievedorders`\n    }, {\n      title: `Pending Orders`,\n      path: `/pendingorders`\n    }, {\n      title: `FAQ`,\n      path: `/faq`\n    }, {\n      title: `Logout`,\n      path: `/logout`\n    }],\n    Registration_username: '',\n    Registration_password: '',\n    Registration_name: '',\n    Registration_email: '',\n    Registration_address: '',\n    Registration_phone: '',\n    Registration_confirm_password: '',\n    registrationError: '',\n    passwordMatch: '',\n    criteriaError: '',\n    availability: 'NaN',\n    errormessage: '',\n    isActive: ''\n  },\n  reducers: {\n    setValue: (state, action) => {\n      state[action.payload.name] = action.payload.value;\n    },\n    setpasswordMatch: (state, action) => {\n      state.passwordMatch = action.payload;\n    },\n    setcriteriaError: (state, action) => {\n      state.criteriaError = action.payload;\n    }\n  },\n  extraReducers: {\n    [userAuth.fulfilled]: (state, action) => {\n      state.usertype = action.payload.userType;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      state.isAuthenticated = true;\n      return action.payload.status;\n    },\n    [userAuth.rejected]: (state, action) => {\n      state.error = true;\n    },\n    [userDeauth.fulfilled]: (state, action) => {\n      state.isAuthenticated = false;\n      state.user = {};\n      state.userType = '';\n      state.links = action.payload.links;\n    },\n    [createCustomer.fulfilled]: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      return action.payload.status;\n    },\n    [createCustomer.rejected]: (state, action) => {\n      state.registrationError = true;\n    },\n    [checkUsernameAvailability.fulfilled]: (state, action) => {\n      state.availability = action.payload;\n    },\n    [checkUsernameAvailability.rejected]: (state, action) => {\n      state.availability = false;\n    },\n    [refreshToken.fulfilled]: (state, action) => {\n      state.userType = action.payload.userType;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      state.isAuthenticated = true;\n    },\n    [refreshToken.rejected]: (state, links) => {\n      state.error = true;\n      state.isAuthenticated = false;\n    }\n  }\n});\nexport const {\n  setValue,\n  setpasswordMatch,\n  setcriteriaError\n} = authenticationSlice.actions;\nexport default authenticationSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/authentication/authenticationSlice.js"],"names":["createAsyncThunk","createSlice","axios","userAuth","getState","loginUsername","loginPassword","typeofuser","authentication","response","post","withCredentials","data","err","Promise","reject","refreshToken","get","checkUsernameAvailability","Registration_username","createCustomer","Registration_password","Registration_name","Registration_email","Registration_address","Registration_phone","userDeauth","status","error","authenticationSlice","name","initialState","userType","isAuthenticated","user","generallinks","title","path","customerLinks","sellerlinks","Registration_confirm_password","registrationError","passwordMatch","criteriaError","availability","errormessage","isActive","reducers","setValue","state","action","payload","value","setpasswordMatch","setcriteriaError","extraReducers","fulfilled","usertype","links","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nexport const userAuth = createAsyncThunk(\r\n    'authentication/userAuth',\r\n    async ( {getState} ) =>{\r\n        const {loginUsername,loginPassword,typeofuser} = getState().authentication;\r\n        try{\r\n            const response = axios.post('http://localhost:5000/auth/signin',{\r\n                'username':loginUsername,\r\n                'password':loginPassword,\r\n                'typeofuser':typeofuser\r\n            },{withCredentials:true});\r\n            return (await response).data;\r\n        }catch(err){\r\n            return Promise.reject(401);\r\n        }\r\n    }\r\n)\r\nexport const refreshToken = createAsyncThunk(\r\n    'authentication/refreshToken',\r\n    async () =>{\r\n        try{\r\n            const response = axios.get('http://localhost:5000/auth/getstatus',{withCredentials:true});\r\n            return (await response).data;\r\n        }catch(err){\r\n            return Promise.reject(401);\r\n        }\r\n    }\r\n)\r\nexport const checkUsernameAvailability = createAsyncThunk(\r\n    'authentication/checkUsernameAvailability',\r\n    async ( {getState} ) =>{\r\n        const {Registration_username} = getState().authentication;\r\n        if(Registration_username!==''){\r\n            try{\r\n                const response = axios.get('http://localhost:5000/user/availability/'+Registration_username,{withCredentials:true});\r\n                return (await response).data;\r\n            }catch(err){\r\n                return Promise.reject(401);\r\n            }\r\n        }\r\n    }\r\n)\r\nexport const createCustomer = createAsyncThunk(\r\n    'authentication/create',\r\n    async ( {getState} ) =>{\r\n        const {Registration_username,Registration_password,Registration_name,Registration_email,Registration_address,Registration_phone}=getState().authentication;\r\n        try{\r\n            const response = axios.post('http://localhost:5000/user/create',{\r\n                'name' : Registration_name,\r\n                'username' : Registration_username,\r\n                'phone' : Registration_phone,\r\n                'email' : Registration_email,\r\n                'password' : Registration_password,\r\n                'address': Registration_address\r\n            },{withCredentials:true});\r\n            return (await response).data;\r\n        }catch(err){\r\n            return Promise.reject(401);\r\n        }\r\n    }\r\n)\r\n\r\nexport const userDeauth = createAsyncThunk(\r\n    'authentication/userDeauth',\r\n    async () =>{\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/auth/signout',{withCredentials:true});\r\n            return response.status;\r\n        }catch(error){\r\n            return Promise.reject(500);\r\n        }\r\n    }\r\n)\r\nconst authenticationSlice = createSlice({\r\n    name:'authentication',\r\n    initialState:{\r\n        userType:'',\r\n        isAuthenticated:'loading',\r\n        user:{},\r\n\r\n        loginUsername:'',\r\n        loginPassword:'',\r\n        typeofuser:'',\r\n        error:'',\r\n                                \r\n        generallinks:[{title:'Home', path:'/'},{ title: `About us`, path: `/about` },{ title: `Product`, path: `/product/all` },{ title: `FAQ`, path: `/faq` },{ title: `Login`, path: `/login` }],\r\n        customerLinks:[{title:'Home', path:'/'},{ title: `Product`, path: `/product/all/1` },{ title: `FAQ`, path: `/faq` },{ title: `About us`, path: `/about` },{ title: `Cart`, path: `/cart` },{ title: `Your Orders`, path: `/yorders` },{ title: `Logout`, path: `/logout` }],\r\n        sellerlinks:[{title:'Home', path:'/'},{ title: `About us`, path: `/about` },{ title: `Insert Products`, path: `/insertproduct` },{ title: `All Orders`, path: `/recievedorders` },{ title: `Pending Orders`, path: `/pendingorders` },{ title: `FAQ`, path: `/faq` },{ title: `Logout`, path: `/logout` }],\r\n        \r\n        Registration_username:'',\r\n        Registration_password:'',\r\n        Registration_name:'',\r\n        Registration_email:'',\r\n        Registration_address:'',\r\n        Registration_phone:'',\r\n        Registration_confirm_password:'',\r\n        registrationError:'',\r\n        passwordMatch:'',\r\n        criteriaError:'',\r\n        availability:'NaN',\r\n        errormessage:'',\r\n        isActive:'',\r\n    },\r\n    reducers:{\r\n        setValue:(state,action)=>{\r\n            state[action.payload.name]=action.payload.value;\r\n        },setpasswordMatch:(state, action)=>{\r\n            state.passwordMatch = action.payload;\r\n        },setcriteriaError:(state, action)=>{\r\n            state.criteriaError = action.payload;\r\n        }\r\n    },\r\n    extraReducers:{\r\n        [userAuth.fulfilled]:(state, action)=>{\r\n            state.usertype = action.payload.userType;\r\n            state.user = action.payload.user;\r\n            state.links = action.payload.links;\r\n            state.isAuthenticated=true;\r\n            return action.payload.status;\r\n        },[userAuth.rejected]:(state, action)=>{\r\n            state.error = true;\r\n        },[userDeauth.fulfilled]:(state,action)=>{\r\n            state.isAuthenticated=false;\r\n            state.user={};\r\n            state.userType='';\r\n            state.links=action.payload.links;\r\n        },[createCustomer.fulfilled]:(state, action)=>{\r\n            state.isAuthenticated=true;\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            return action.payload.status;\r\n        },[createCustomer.rejected]:(state, action)=>{\r\n            state.registrationError = true;\r\n        },[checkUsernameAvailability.fulfilled]:(state, action)=>{\r\n            state.availability = action.payload;\r\n        },[checkUsernameAvailability.rejected]:(state,action)=>{\r\n            state.availability = false;\r\n        },[refreshToken.fulfilled]:(state,action)=>{\r\n            state.userType = action.payload.userType;\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            state.isAuthenticated=true;\r\n        },[refreshToken.rejected]:(state, links)=>{\r\n            state.error = true;\r\n            state.isAuthenticated = false;\r\n        }\r\n    }\r\n})\r\nexport const {setValue, setpasswordMatch, setcriteriaError}=authenticationSlice.actions;\r\nexport default authenticationSlice.reducer;"]},"metadata":{},"sourceType":"module"}