{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geeta\\\\opticonnect\\\\frontend\\\\src\\\\components\\\\Privaterouteseller.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport Loadingspinner from './Loadingspinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRouteSeller = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    isAuthenticated,\n    userType\n  } = useSelector(state => state.authentication);\n\n  if (isAuthenticated === '') {\n    return /*#__PURE__*/_jsxDEV(Loadingspinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this);\n  } else if (isAuthenticated === true && userType === 'seller') {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this);\n  }\n};\n\n_s(PrivateRouteSeller, \"NzTvi1k4NbQ6wM9K25SashlZyvo=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRouteSeller;\nexport default PrivateRouteSeller;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRouteSeller\");","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/components/Privaterouteseller.js"],"names":["React","useSelector","Redirect","Route","Loadingspinner","PrivateRouteSeller","component","Component","rest","isAuthenticated","userType","state","authentication","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AAAA;;AAC5D,QAAM;AAACC,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,MAA8BT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAA/C;;AACA,MAAGH,eAAe,KAAG,EAArB,EAAwB;AACpB,wBAAQ,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAFD,MAEM,IAAGA,eAAe,KAAG,IAAlB,IAA0BC,QAAQ,KAAG,QAAxC,EAAiD;AACnD,wBACI,QAAC,KAAD,OAAWF,IAAX;AAAiB,MAAA,MAAM,EAAEK,KAAK,iBAAK,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJK,MAID;AACD,wBAAQ,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;AACJ,CAXD;;GAAMR,kB;UACkCJ,W;;;KADlCI,kB;AAaN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route} from 'react-router-dom';\r\nimport Loadingspinner from './Loadingspinner';\r\n\r\nconst PrivateRouteSeller = ({component: Component, ...rest}) => {\r\n    const {isAuthenticated, userType} = useSelector(state => state.authentication);\r\n    if(isAuthenticated===''){\r\n        return (<Loadingspinner/>);\r\n    }else if(isAuthenticated===true && userType==='seller'){\r\n        return (\r\n            <Route {...rest} render={props => (<Component {...props} />)}/>\r\n        );\r\n    }else{\r\n        return (<Redirect to='/'/>);   \r\n    }\r\n};\r\n\r\nexport default PrivateRouteSeller;"]},"metadata":{},"sourceType":"module"}