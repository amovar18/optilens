{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const userAuth = createAsyncThunk('authentication/userAuth', async ({\n  getState\n}) => {\n  const {\n    loginUsername,\n    loginPassword,\n    typeofuser\n  } = getState().authentication;\n\n  try {\n    const response = axios.post('http://localhost:5000/auth/signin', {\n      'username': loginUsername,\n      'password': loginPassword,\n      'typeofuser': typeofuser\n    }, {\n      withCredentials: true\n    });\n    return (await response).data;\n  } catch (err) {\n    return Promise.reject(401);\n  }\n});\nexport const refreshToken = createAsyncThunk('authentication/refreshToken', async () => {\n  const response = axios.get('http://localhost:5000/auth/getstatus', {\n    withCredentials: true\n  }).catch(error => {\n    return error.response;\n  });\n  return (await response).data;\n});\nexport const checkUsernameAvailability = createAsyncThunk('authentication/checkUsernameAvailability', async ({\n  getState\n}) => {\n  const {\n    Registration_username\n  } = getState().authentication;\n\n  if (Registration_username !== '') {\n    try {\n      const response = axios.get('http://localhost:5000/user/availability/' + Registration_username, {\n        withCredentials: true\n      });\n      return (await response).data;\n    } catch (err) {\n      return Promise.reject(401);\n    }\n  }\n});\nexport const createCustomer = createAsyncThunk('authentication/create', async ({\n  getState\n}) => {\n  const {\n    Registration_username,\n    Registration_password,\n    Registration_name,\n    Registration_email,\n    Registration_address,\n    Registration_phone\n  } = getState().authentication;\n\n  try {\n    const response = axios.post('http://localhost:5000/user/create', {\n      'name': Registration_name,\n      'username': Registration_username,\n      'phone': Registration_phone,\n      'email': Registration_email,\n      'password': Registration_password,\n      'address': Registration_address\n    }, {\n      withCredentials: true\n    });\n    return (await response).data;\n  } catch (err) {\n    return Promise.reject(401);\n  }\n});\nexport const userDeauth = createAsyncThunk('authentication/userDeauth', async () => {\n  try {\n    const response = await axios.get('http://localhost:5000/auth/signout', {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(500);\n  }\n});\nconst authenticationSlice = createSlice({\n  name: 'authentication',\n  initialState: {\n    userType: '',\n    isAuthenticated: 'loading',\n    user: {},\n    error: '',\n    loginUsername: '',\n    loginPassword: '',\n    typeofuser: '',\n    loginerror: '',\n    links: [{\n      title: 'Home',\n      path: '/'\n    }, {\n      title: `About us`,\n      path: `/about`\n    }, {\n      title: `Product`,\n      path: `/product/all/1`\n    }, {\n      title: `FAQ`,\n      path: `/faq`\n    }, {\n      title: `Login`,\n      path: `/login`\n    }],\n    Registration_username: '',\n    Registration_password: '',\n    Registration_name: '',\n    Registration_email: '',\n    Registration_address: '',\n    Registration_phone: '',\n    Registration_confirm_password: '',\n    registrationError: '',\n    passwordMatch: '',\n    criteriaError: '',\n    availability: 'NaN',\n    errormessage: '',\n    isActive: ''\n  },\n  reducers: {\n    setValue: (state, action) => {\n      state[action.payload.name] = action.payload.value;\n    },\n    setpasswordMatch: (state, action) => {\n      state.passwordMatch = action.payload;\n    },\n    setcriteriaError: (state, action) => {\n      state.criteriaError = action.payload;\n    }\n  },\n  extraReducers: {\n    [userAuth.fulfilled]: (state, action) => {\n      // sign in user and set usertype links and user details;\n      state.usertype = action.payload.userType;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      state.isAuthenticated = true;\n    },\n    [userAuth.rejected]: (state, action) => {\n      // if authentication gets rejected due to some reason\n      state.errormessage = action.error;\n      state.loginerror = true;\n    },\n    [userDeauth.fulfilled]: (state, action) => {\n      // user get successfully loggedout\n      state.isAuthenticated = false;\n      state.user = {};\n      state.userType = '';\n      state.links = action.payload.links;\n    },\n    [createCustomer.fulfilled]: (state, action) => {\n      // customer is created successfully\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n    },\n    [createCustomer.rejected]: (state, action) => {\n      // problem in creating customer\n      state.registrationError = true;\n      state.errormessage = action.error;\n    },\n    [checkUsernameAvailability.fulfilled]: (state, action) => {\n      state.availability = action.payload;\n    },\n    [checkUsernameAvailability.rejected]: (state, action) => {\n      state.availability = false;\n    },\n    [refreshToken.fulfilled]: (state, action) => {\n      // refresh the token if available\n      state.userType = action.payload.userType;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      state.isAuthenticated = true;\n    },\n    [refreshToken.rejected]: (state, action) => {\n      console.log(action.error);\n      state.isAuthenticated = 'loading';\n      state.links = action.error.links;\n      state.user = {};\n      state.userType = '';\n    }\n  }\n});\nexport const {\n  setValue,\n  setpasswordMatch,\n  setcriteriaError\n} = authenticationSlice.actions;\nexport default authenticationSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/authentication/authenticationSlice.js"],"names":["createAsyncThunk","createSlice","axios","userAuth","getState","loginUsername","loginPassword","typeofuser","authentication","response","post","withCredentials","data","err","Promise","reject","refreshToken","get","catch","error","checkUsernameAvailability","Registration_username","createCustomer","Registration_password","Registration_name","Registration_email","Registration_address","Registration_phone","userDeauth","authenticationSlice","name","initialState","userType","isAuthenticated","user","loginerror","links","title","path","Registration_confirm_password","registrationError","passwordMatch","criteriaError","availability","errormessage","isActive","reducers","setValue","state","action","payload","value","setpasswordMatch","setcriteriaError","extraReducers","fulfilled","usertype","rejected","console","log","actions","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,QAAQ,GAAGH,gBAAgB,CACpC,yBADoC,EAEpC,OAAQ;AAACI,EAAAA;AAAD,CAAR,KAAuB;AACnB,QAAM;AAACC,IAAAA,aAAD;AAAeC,IAAAA,aAAf;AAA6BC,IAAAA;AAA7B,MAA2CH,QAAQ,GAAGI,cAA5D;;AACA,MAAG;AACC,UAAMC,QAAQ,GAAGP,KAAK,CAACQ,IAAN,CAAW,mCAAX,EAA+C;AAC5D,kBAAWL,aADiD;AAE5D,kBAAWC,aAFiD;AAG5D,oBAAaC;AAH+C,KAA/C,EAIf;AAACI,MAAAA,eAAe,EAAC;AAAjB,KAJe,CAAjB;AAKA,WAAO,CAAC,MAAMF,QAAP,EAAiBG,IAAxB;AACH,GAPD,CAOC,OAAMC,GAAN,EAAU;AACP,WAAOC,OAAO,CAACC,MAAR,CAAe,GAAf,CAAP;AACH;AACJ,CAdmC,CAAjC;AAgBP,OAAO,MAAMC,YAAY,GAAGhB,gBAAgB,CACxC,6BADwC,EAExC,YAAW;AACP,QAAMS,QAAQ,GAAGP,KAAK,CAACe,GAAN,CAAU,sCAAV,EAAiD;AAACN,IAAAA,eAAe,EAAC;AAAjB,GAAjD,EAAyEO,KAAzE,CAAgFC,KAAD,IAAS;AAAC,WAAOA,KAAK,CAACV,QAAb;AAAsB,GAA/G,CAAjB;AACA,SAAO,CAAC,MAAMA,QAAP,EAAiBG,IAAxB;AAEH,CANuC,CAArC;AAQP,OAAO,MAAMQ,yBAAyB,GAAGpB,gBAAgB,CACrD,0CADqD,EAErD,OAAQ;AAACI,EAAAA;AAAD,CAAR,KAAuB;AACnB,QAAM;AAACiB,IAAAA;AAAD,MAA0BjB,QAAQ,GAAGI,cAA3C;;AACA,MAAGa,qBAAqB,KAAG,EAA3B,EAA8B;AAC1B,QAAG;AACC,YAAMZ,QAAQ,GAAGP,KAAK,CAACe,GAAN,CAAU,6CAA2CI,qBAArD,EAA2E;AAACV,QAAAA,eAAe,EAAC;AAAjB,OAA3E,CAAjB;AACA,aAAO,CAAC,MAAMF,QAAP,EAAiBG,IAAxB;AACH,KAHD,CAGC,OAAMC,GAAN,EAAU;AACP,aAAOC,OAAO,CAACC,MAAR,CAAe,GAAf,CAAP;AACH;AACJ;AACJ,CAZoD,CAAlD;AAcP,OAAO,MAAMO,cAAc,GAAGtB,gBAAgB,CAC1C,uBAD0C,EAE1C,OAAQ;AAACI,EAAAA;AAAD,CAAR,KAAuB;AACnB,QAAM;AAACiB,IAAAA,qBAAD;AAAuBE,IAAAA,qBAAvB;AAA6CC,IAAAA,iBAA7C;AAA+DC,IAAAA,kBAA/D;AAAkFC,IAAAA,oBAAlF;AAAuGC,IAAAA;AAAvG,MAA2HvB,QAAQ,GAAGI,cAA5I;;AACA,MAAG;AACC,UAAMC,QAAQ,GAAGP,KAAK,CAACQ,IAAN,CAAW,mCAAX,EAA+C;AAC5D,cAASc,iBADmD;AAE5D,kBAAaH,qBAF+C;AAG5D,eAAUM,kBAHkD;AAI5D,eAAUF,kBAJkD;AAK5D,kBAAaF,qBAL+C;AAM5D,iBAAWG;AANiD,KAA/C,EAOf;AAACf,MAAAA,eAAe,EAAC;AAAjB,KAPe,CAAjB;AAQA,WAAO,CAAC,MAAMF,QAAP,EAAiBG,IAAxB;AACH,GAVD,CAUC,OAAMC,GAAN,EAAU;AACP,WAAOC,OAAO,CAACC,MAAR,CAAe,GAAf,CAAP;AACH;AACJ,CAjByC,CAAvC;AAoBP,OAAO,MAAMa,UAAU,GAAG5B,gBAAgB,CACtC,2BADsC,EAEtC,YAAW;AACP,MAAG;AACC,UAAMS,QAAQ,GAAG,MAAMP,KAAK,CAACe,GAAN,CAAU,oCAAV,EAA+C;AAACN,MAAAA,eAAe,EAAC;AAAjB,KAA/C,CAAvB;AACA,WAAOF,QAAQ,CAACG,IAAhB;AACH,GAHD,CAGC,OAAMO,KAAN,EAAY;AACT,WAAOL,OAAO,CAACC,MAAR,CAAe,GAAf,CAAP;AACH;AACJ,CATqC,CAAnC;AAWP,MAAMc,mBAAmB,GAAG5B,WAAW,CAAC;AACpC6B,EAAAA,IAAI,EAAC,gBAD+B;AAEpCC,EAAAA,YAAY,EAAC;AACTC,IAAAA,QAAQ,EAAC,EADA;AAETC,IAAAA,eAAe,EAAC,SAFP;AAGTC,IAAAA,IAAI,EAAC,EAHI;AAITf,IAAAA,KAAK,EAAC,EAJG;AAMTd,IAAAA,aAAa,EAAC,EANL;AAOTC,IAAAA,aAAa,EAAC,EAPL;AAQTC,IAAAA,UAAU,EAAC,EARF;AAST4B,IAAAA,UAAU,EAAC,EATF;AAWTC,IAAAA,KAAK,EAAC,CAAC;AAACC,MAAAA,KAAK,EAAC,MAAP;AAAeC,MAAAA,IAAI,EAAC;AAApB,KAAD,EAA0B;AAAED,MAAAA,KAAK,EAAG,UAAV;AAAqBC,MAAAA,IAAI,EAAG;AAA5B,KAA1B,EAAgE;AAAED,MAAAA,KAAK,EAAG,SAAV;AAAoBC,MAAAA,IAAI,EAAG;AAA3B,KAAhE,EAA6G;AAAED,MAAAA,KAAK,EAAG,KAAV;AAAgBC,MAAAA,IAAI,EAAG;AAAvB,KAA7G,EAA4I;AAAED,MAAAA,KAAK,EAAG,OAAV;AAAkBC,MAAAA,IAAI,EAAG;AAAzB,KAA5I,CAXG;AAaTjB,IAAAA,qBAAqB,EAAC,EAbb;AAcTE,IAAAA,qBAAqB,EAAC,EAdb;AAeTC,IAAAA,iBAAiB,EAAC,EAfT;AAgBTC,IAAAA,kBAAkB,EAAC,EAhBV;AAiBTC,IAAAA,oBAAoB,EAAC,EAjBZ;AAkBTC,IAAAA,kBAAkB,EAAC,EAlBV;AAmBTY,IAAAA,6BAA6B,EAAC,EAnBrB;AAoBTC,IAAAA,iBAAiB,EAAC,EApBT;AAqBTC,IAAAA,aAAa,EAAC,EArBL;AAsBTC,IAAAA,aAAa,EAAC,EAtBL;AAuBTC,IAAAA,YAAY,EAAC,KAvBJ;AAwBTC,IAAAA,YAAY,EAAC,EAxBJ;AAyBTC,IAAAA,QAAQ,EAAC;AAzBA,GAFuB;AA6BpCC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,QAAQ,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACrBD,MAAAA,KAAK,CAACC,MAAM,CAACC,OAAP,CAAepB,IAAhB,CAAL,GAA2BmB,MAAM,CAACC,OAAP,CAAeC,KAA1C;AACH,KAHI;AAGHC,IAAAA,gBAAgB,EAAC,CAACJ,KAAD,EAAQC,MAAR,KAAiB;AAChCD,MAAAA,KAAK,CAACP,aAAN,GAAsBQ,MAAM,CAACC,OAA7B;AACH,KALI;AAKHG,IAAAA,gBAAgB,EAAC,CAACL,KAAD,EAAQC,MAAR,KAAiB;AAChCD,MAAAA,KAAK,CAACN,aAAN,GAAsBO,MAAM,CAACC,OAA7B;AACH;AAPI,GA7B2B;AAsCpCI,EAAAA,aAAa,EAAC;AACV,KAACnD,QAAQ,CAACoD,SAAV,GAAqB,CAACP,KAAD,EAAQC,MAAR,KAAiB;AAClC;AACAD,MAAAA,KAAK,CAACQ,QAAN,GAAiBP,MAAM,CAACC,OAAP,CAAelB,QAAhC;AACAgB,MAAAA,KAAK,CAACd,IAAN,GAAae,MAAM,CAACC,OAAP,CAAehB,IAA5B;AACAc,MAAAA,KAAK,CAACZ,KAAN,GAAca,MAAM,CAACC,OAAP,CAAed,KAA7B;AACAY,MAAAA,KAAK,CAACf,eAAN,GAAwB,IAAxB;AACH,KAPS;AAOR,KAAC9B,QAAQ,CAACsD,QAAV,GAAoB,CAACT,KAAD,EAAQC,MAAR,KAAiB;AACnC;AACAD,MAAAA,KAAK,CAACJ,YAAN,GAAqBK,MAAM,CAAC9B,KAA5B;AACA6B,MAAAA,KAAK,CAACb,UAAN,GAAmB,IAAnB;AACH,KAXS;AAWR,KAACP,UAAU,CAAC2B,SAAZ,GAAuB,CAACP,KAAD,EAAOC,MAAP,KAAgB;AACrC;AACAD,MAAAA,KAAK,CAACf,eAAN,GAAsB,KAAtB;AACAe,MAAAA,KAAK,CAACd,IAAN,GAAW,EAAX;AACAc,MAAAA,KAAK,CAAChB,QAAN,GAAe,EAAf;AACAgB,MAAAA,KAAK,CAACZ,KAAN,GAAYa,MAAM,CAACC,OAAP,CAAed,KAA3B;AACH,KAjBS;AAiBR,KAACd,cAAc,CAACiC,SAAhB,GAA2B,CAACP,KAAD,EAAQC,MAAR,KAAiB;AAC1C;AACAD,MAAAA,KAAK,CAACf,eAAN,GAAsB,IAAtB;AACAe,MAAAA,KAAK,CAACd,IAAN,GAAWe,MAAM,CAACC,OAAP,CAAehB,IAA1B;AACAc,MAAAA,KAAK,CAACZ,KAAN,GAAYa,MAAM,CAACC,OAAP,CAAed,KAA3B;AACH,KAtBS;AAsBR,KAACd,cAAc,CAACmC,QAAhB,GAA0B,CAACT,KAAD,EAAQC,MAAR,KAAiB;AACzC;AACAD,MAAAA,KAAK,CAACR,iBAAN,GAA0B,IAA1B;AACAQ,MAAAA,KAAK,CAACJ,YAAN,GAAqBK,MAAM,CAAC9B,KAA5B;AACH,KA1BS;AA0BR,KAACC,yBAAyB,CAACmC,SAA3B,GAAsC,CAACP,KAAD,EAAQC,MAAR,KAAiB;AACrDD,MAAAA,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACC,OAA5B;AACH,KA5BS;AA4BR,KAAC9B,yBAAyB,CAACqC,QAA3B,GAAqC,CAACT,KAAD,EAAOC,MAAP,KAAgB;AACnDD,MAAAA,KAAK,CAACL,YAAN,GAAqB,KAArB;AACH,KA9BS;AA8BR,KAAC3B,YAAY,CAACuC,SAAd,GAAyB,CAACP,KAAD,EAAOC,MAAP,KAAgB;AACvC;AACAD,MAAAA,KAAK,CAAChB,QAAN,GAAiBiB,MAAM,CAACC,OAAP,CAAelB,QAAhC;AACAgB,MAAAA,KAAK,CAACd,IAAN,GAAWe,MAAM,CAACC,OAAP,CAAehB,IAA1B;AACAc,MAAAA,KAAK,CAACZ,KAAN,GAAYa,MAAM,CAACC,OAAP,CAAed,KAA3B;AACAY,MAAAA,KAAK,CAACf,eAAN,GAAwB,IAAxB;AACH,KApCS;AAoCR,KAACjB,YAAY,CAACyC,QAAd,GAAwB,CAACT,KAAD,EAAQC,MAAR,KAAiB;AACvCS,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAAC9B,KAAnB;AACA6B,MAAAA,KAAK,CAACf,eAAN,GAAwB,SAAxB;AACAe,MAAAA,KAAK,CAACZ,KAAN,GAAYa,MAAM,CAAC9B,KAAP,CAAaiB,KAAzB;AAEAY,MAAAA,KAAK,CAACd,IAAN,GAAa,EAAb;AACAc,MAAAA,KAAK,CAAChB,QAAN,GAAiB,EAAjB;AACH;AA3CS;AAtCsB,CAAD,CAAvC;AAoFA,OAAO,MAAM;AAACe,EAAAA,QAAD;AAAWK,EAAAA,gBAAX;AAA6BC,EAAAA;AAA7B,IAA+CxB,mBAAmB,CAAC+B,OAAzE;AACP,eAAe/B,mBAAmB,CAACgC,OAAnC","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nexport const userAuth = createAsyncThunk(\r\n    'authentication/userAuth',\r\n    async ( {getState} ) =>{\r\n        const {loginUsername,loginPassword,typeofuser} = getState().authentication;\r\n        try{\r\n            const response = axios.post('http://localhost:5000/auth/signin',{\r\n                'username':loginUsername,\r\n                'password':loginPassword,\r\n                'typeofuser':typeofuser\r\n            },{withCredentials:true});\r\n            return (await response).data;\r\n        }catch(err){\r\n            return Promise.reject(401);\r\n        }\r\n    }\r\n)\r\nexport const refreshToken = createAsyncThunk(\r\n    'authentication/refreshToken',\r\n    async () =>{\r\n        const response = axios.get('http://localhost:5000/auth/getstatus',{withCredentials:true}).catch((error)=>{return error.response});\r\n        return (await response).data;\r\n        \r\n    }\r\n)\r\nexport const checkUsernameAvailability = createAsyncThunk(\r\n    'authentication/checkUsernameAvailability',\r\n    async ( {getState} ) =>{\r\n        const {Registration_username} = getState().authentication;\r\n        if(Registration_username!==''){\r\n            try{\r\n                const response = axios.get('http://localhost:5000/user/availability/'+Registration_username,{withCredentials:true});\r\n                return (await response).data;\r\n            }catch(err){\r\n                return Promise.reject(401);\r\n            }\r\n        }\r\n    }\r\n)\r\nexport const createCustomer = createAsyncThunk(\r\n    'authentication/create',\r\n    async ( {getState} ) =>{\r\n        const {Registration_username,Registration_password,Registration_name,Registration_email,Registration_address,Registration_phone}=getState().authentication;\r\n        try{\r\n            const response = axios.post('http://localhost:5000/user/create',{\r\n                'name' : Registration_name,\r\n                'username' : Registration_username,\r\n                'phone' : Registration_phone,\r\n                'email' : Registration_email,\r\n                'password' : Registration_password,\r\n                'address': Registration_address\r\n            },{withCredentials:true});\r\n            return (await response).data;\r\n        }catch(err){\r\n            return Promise.reject(401);\r\n        }\r\n    }\r\n)\r\n\r\nexport const userDeauth = createAsyncThunk(\r\n    'authentication/userDeauth',\r\n    async () =>{\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/auth/signout',{withCredentials:true});\r\n            return response.data;\r\n        }catch(error){\r\n            return Promise.reject(500);\r\n        }\r\n    }\r\n)\r\nconst authenticationSlice = createSlice({\r\n    name:'authentication',\r\n    initialState:{\r\n        userType:'',\r\n        isAuthenticated:'loading',\r\n        user:{},\r\n        error:'',\r\n\r\n        loginUsername:'',\r\n        loginPassword:'',\r\n        typeofuser:'',\r\n        loginerror:'',\r\n                                \r\n        links:[{title:'Home', path:'/'},{ title: `About us`, path: `/about` },{ title: `Product`, path: `/product/all/1` },{ title: `FAQ`, path: `/faq` },{ title: `Login`, path: `/login` }],\r\n        \r\n        Registration_username:'',\r\n        Registration_password:'',\r\n        Registration_name:'',\r\n        Registration_email:'',\r\n        Registration_address:'',\r\n        Registration_phone:'',\r\n        Registration_confirm_password:'',\r\n        registrationError:'',\r\n        passwordMatch:'',\r\n        criteriaError:'',\r\n        availability:'NaN',\r\n        errormessage:'',\r\n        isActive:'',\r\n    },\r\n    reducers:{\r\n        setValue:(state,action)=>{\r\n            state[action.payload.name]=action.payload.value;\r\n        },setpasswordMatch:(state, action)=>{\r\n            state.passwordMatch = action.payload;\r\n        },setcriteriaError:(state, action)=>{\r\n            state.criteriaError = action.payload;\r\n        }\r\n    },\r\n    extraReducers:{\r\n        [userAuth.fulfilled]:(state, action)=>{\r\n            // sign in user and set usertype links and user details;\r\n            state.usertype = action.payload.userType;\r\n            state.user = action.payload.user;\r\n            state.links = action.payload.links;\r\n            state.isAuthenticated = true;\r\n        },[userAuth.rejected]:(state, action)=>{\r\n            // if authentication gets rejected due to some reason\r\n            state.errormessage = action.error;\r\n            state.loginerror = true;\r\n        },[userDeauth.fulfilled]:(state,action)=>{\r\n            // user get successfully loggedout\r\n            state.isAuthenticated=false;\r\n            state.user={};\r\n            state.userType='';\r\n            state.links=action.payload.links;\r\n        },[createCustomer.fulfilled]:(state, action)=>{\r\n            // customer is created successfully\r\n            state.isAuthenticated=true;\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n        },[createCustomer.rejected]:(state, action)=>{\r\n            // problem in creating customer\r\n            state.registrationError = true;\r\n            state.errormessage = action.error;\r\n        },[checkUsernameAvailability.fulfilled]:(state, action)=>{\r\n            state.availability = action.payload;\r\n        },[checkUsernameAvailability.rejected]:(state,action)=>{\r\n            state.availability = false;\r\n        },[refreshToken.fulfilled]:(state,action)=>{\r\n            // refresh the token if available\r\n            state.userType = action.payload.userType;\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            state.isAuthenticated = true;\r\n        },[refreshToken.rejected]:(state, action)=>{\r\n            console.log(action.error);\r\n            state.isAuthenticated = 'loading';\r\n            state.links=action.error.links;\r\n            \r\n            state.user = {}; \r\n            state.userType = '';\r\n        }\r\n    }\r\n})\r\nexport const {setValue, setpasswordMatch, setcriteriaError}=authenticationSlice.actions;\r\nexport default authenticationSlice.reducer;"]},"metadata":{},"sourceType":"module"}