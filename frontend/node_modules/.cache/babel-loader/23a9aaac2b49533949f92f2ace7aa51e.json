{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geeta\\\\opticonnect\\\\frontend\\\\src\\\\components\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport Alert from './alert';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userAuth } from '../slices/authentication/authenticationSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    isAuthenticated\n  } = useSelector(state => state.authentication);\n  const [criteriaerror, setcriteriaerror] = useState('');\n  const [passwordmatch, setpasswordmatcherror] = useState('');\n  const [loginerror, setloginerror] = useState('');\n  const [registererror, setregistererror] = useState(''); //for user registration\n\n  const [name, setname] = useState('');\n  const [address, setaddress] = useState('');\n  const [regemail, setemail] = useState('');\n  const [regpassword, setregpassword] = useState('');\n  const [confirmpassword, setconfirmpassword] = useState('');\n  const [regusername, setregusername] = useState('');\n  const [phone, setphone] = useState('');\n  const [availability, setavailability] = useState('');\n\n  const checkpasswordstrength = () => {\n    if (regpassword !== '') {\n      let regex = RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\n\n      if (regex.test(regpassword) === true) {\n        setcriteriaerror(false);\n      } else {\n        setcriteriaerror(true);\n      }\n    }\n  };\n\n  const checkpasswords = () => {\n    if (regpassword !== undefined && confirmpassword !== undefined) {\n      if (regpassword !== confirmpassword) {\n        setpasswordmatcherror(true);\n      } else {\n        setpasswordmatcherror(false);\n      }\n    }\n  };\n\n  const checkabailability = () => {\n    if (regusername !== '') {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/user/availability/' + regusername\n      }).then(response => {\n        setavailability(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const submitValueRegister = e => {\n    e.preventDefault();\n\n    if (availability === true && criteriaerror === false && passwordmatch === false) {\n      axios({\n        method: 'POST',\n        url: 'http://localhost:5000/user/create',\n        withCredentials: true,\n        data: {\n          'name': name,\n          'username': regusername,\n          'phone': phone,\n          'email': regemail,\n          'password': regpassword,\n          'address': address\n        }\n      }).then(response => {\n        window.location = 'http://localhost:3000/';\n      }).catch(error => {\n        if (error !== undefined) {\n          if (error.response.status === 500) {\n            setregistererror(true);\n          }\n        }\n      });\n    }\n  }; // for login\n\n\n  const [logusername, setlogusername] = useState('');\n  const [logpassword, setlogpassword] = useState('');\n  const [typeofuser, settypeofuser] = useState('Customer');\n\n  const submitValueLog = e => {\n    e.preventDefault();\n    const payload = {\n      logusername,\n      logpassword,\n      typeofuser\n    };\n    dispatch(userAuth(payload)).then(unwrapResult).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  if (isAuthenticated === true) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'height': '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-6\",\n              children: \"Login to your account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: submitValueLog,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                placeholder: \"Username\",\n                id: \"username\",\n                type: \"text\",\n                onChange: e => setlogusername(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 162\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                placeholder: \"Password\",\n                id: \"password\",\n                type: \"password\",\n                onChange: e => setlogpassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 175\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check form-check-inline\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  className: \"form-check-input\",\n                  name: \"typeofuser\",\n                  id: \"customer\",\n                  value: \"customer\",\n                  onChange: e => settypeofuser(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"customer\",\n                  className: \"form-check-label\",\n                  style: {\n                    'color': '#000000'\n                  },\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check form-check-inline\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  className: \"form-check-input\",\n                  name: \"typeofuser\",\n                  value: \"seller\",\n                  onChange: e => settypeofuser(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"seller\",\n                  className: \"form-check-label\",\n                  style: {\n                    'color': '#000000'\n                  },\n                  children: \"Seller\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), loginerror === '' ? null : /*#__PURE__*/_jsxDEV(Alert, {\n                message: loginerror,\n                type: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 57\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                tag: \"input\",\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-6\",\n              children: \"OR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-6\",\n              children: \"New User Signup!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => submitValueRegister(e),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Name\",\n                onChange: e => setname(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 146\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                placeholder: \"Email\",\n                onChange: e => setemail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 150\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Username\",\n                onChange: e => setregusername(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 157\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: checkabailability,\n                className: \"btn btn-primary\",\n                children: \"Check availability\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 162\n              }, this), availability === true ? /*#__PURE__*/_jsxDEV(Alert, {\n                message: \"Username available\",\n                type: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 56\n              }, this) : availability === false ? /*#__PURE__*/_jsxDEV(Alert, {\n                message: \"Username not available\",\n                type: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 135\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                placeholder: \"Password\",\n                onChange: e => setregpassword(e.target.value),\n                onKeyUp: checkpasswordstrength,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 193\n              }, this), criteriaerror === true ? /*#__PURE__*/_jsxDEV(Alert, {\n                message: \"Passwords do not match criteria\",\n                type: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 59\n              }, this) : criteriaerror === false ? /*#__PURE__*/_jsxDEV(Alert, {\n                message: \"Passwords match criteria\",\n                type: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 149\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                placeholder: \"Confirm Password\",\n                onChange: e => setconfirmpassword(e.target.value),\n                onKeyUp: checkpasswords,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 198\n              }, this), passwordmatch === true ? /*#__PURE__*/_jsxDEV(Alert, {\n                message: \"Passwords do not match\",\n                type: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 59\n              }, this) : passwordmatch === false ? /*#__PURE__*/_jsxDEV(Alert, {\n                message: \"Passwords match\",\n                type: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 140\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                className: \"form-control\",\n                placeholder: \"Phone\",\n                onChange: e => setphone(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 147\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                placeholder: \"Address\",\n                onChange: e => setaddress(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 144\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/registerseller\",\n                  children: \"Want to sell with us ?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 104\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 109\n              }, this), registererror !== '' ? /*#__PURE__*/_jsxDEV(Alert, {\n                message: \"Internal server error\",\n                type: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 53\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Signup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Login, \"Pkc2K5xYmv5Q9ZHyEtaHhXsSBJg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/components/login.js"],"names":["React","useState","Link","Redirect","axios","Alert","unwrapResult","useDispatch","useSelector","userAuth","Login","dispatch","isAuthenticated","state","authentication","criteriaerror","setcriteriaerror","passwordmatch","setpasswordmatcherror","loginerror","setloginerror","registererror","setregistererror","name","setname","address","setaddress","regemail","setemail","regpassword","setregpassword","confirmpassword","setconfirmpassword","regusername","setregusername","phone","setphone","availability","setavailability","checkpasswordstrength","regex","RegExp","test","checkpasswords","undefined","checkabailability","method","url","then","response","data","catch","error","console","log","submitValueRegister","e","preventDefault","withCredentials","window","location","status","logusername","setlogusername","logpassword","setlogpassword","typeofuser","settypeofuser","submitValueLog","payload","target","value"],"mappings":"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","sourcesContent":["import React, { useState }from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Alert from './alert';\r\nimport {unwrapResult} from '@reduxjs/toolkit';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {userAuth} from '../slices/authentication/authenticationSlice';\r\nfunction Login(){\r\n    const dispatch = useDispatch();\r\n    const {isAuthenticated} = useSelector(state => state.authentication);\r\n    const [criteriaerror,setcriteriaerror] = useState('');\r\n    const [passwordmatch,setpasswordmatcherror] = useState('');\r\n    const [loginerror,setloginerror]=useState('');\r\n    const [registererror,setregistererror]=useState('');\r\n\r\n    //for user registration\r\n    const [name,setname]=useState('');\r\n    const [address,setaddress]=useState('');\r\n    const [regemail,setemail]=useState('');\r\n    const [regpassword,setregpassword]=useState('');\r\n    const [confirmpassword,setconfirmpassword]=useState('');\r\n    const [regusername,setregusername]=useState('');\r\n    const [phone,setphone]=useState('');\r\n    const [availability,setavailability]=useState('');\r\n\r\n    const checkpasswordstrength = () =>{\r\n        if(regpassword!==''){\r\n            let regex=RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\r\n            if(regex.test(regpassword)===true){\r\n                setcriteriaerror(false);\r\n            }else{\r\n                setcriteriaerror(true);\r\n            }\r\n        }\r\n    }\r\n    const checkpasswords = () =>{\r\n        if (regpassword !== undefined && confirmpassword !== undefined) {  \r\n            if (regpassword !== confirmpassword) {\r\n                setpasswordmatcherror(true);\r\n            }else{\r\n                setpasswordmatcherror(false);\r\n            }\r\n        }\r\n    }\r\n    const checkabailability=()=>{\r\n        if(regusername!==''){\r\n            axios({\r\n                method: 'GET',\r\n                url: 'http://localhost:5000/user/availability/'+regusername,\r\n            }).then((response)=>{\r\n                setavailability(response.data);\r\n            }).catch((error)=>{\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n    const submitValueRegister = (e) => {\r\n        e.preventDefault();\r\n        if(availability===true && criteriaerror===false && passwordmatch===false){\r\n            axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/user/create',\r\n                withCredentials: true,\r\n                data: {\r\n                    'name' : name,\r\n                    'username' : regusername,\r\n                    'phone' : phone,\r\n                    'email' : regemail,\r\n                    'password' : regpassword,\r\n                    'address': address\r\n                }\r\n            }).then((response)=>{\r\n                window.location='http://localhost:3000/';\r\n            }).catch((error)=>{\r\n                if(error!==undefined){\r\n                    if(error.response.status===500){\r\n                        setregistererror(true);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // for login\r\n    const [logusername,setlogusername]=useState('');\r\n    const [logpassword,setlogpassword]=useState('');\r\n    const [typeofuser,settypeofuser]=useState('Customer');\r\n    const submitValueLog = (e) => {\r\n        e.preventDefault();\r\n        const payload={logusername,logpassword,typeofuser}\r\n        dispatch(userAuth(payload))\r\n        .then(unwrapResult)\r\n        .then((response)=>{\r\n            console.log(response)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        });\r\n    }\r\n    if(isAuthenticated===true){\r\n        return(<Redirect to='/'/>);\r\n    }else{\r\n        return (\r\n            <div style={{'height':'100%'}}>\r\n                <div className='container'>\r\n                    <div className='row align-items-center'>\r\n                        <div className='col-sm'>\r\n                            <h1 className='display-6'>Login to your account</h1>\r\n                            <form onSubmit={submitValueLog}>\r\n                                <input className='form-control' placeholder='Username' id='username' type='text' onChange={e => setlogusername(e.target.value)}/><br/>\r\n                                <input className='form-control' placeholder='Password' id='password' type='password' onChange={e => setlogpassword(e.target.value)} required/><br/>\r\n                                <br/>\r\n                                <div className='form-check form-check-inline'>\r\n                                    <input type='radio' className='form-check-input' name='typeofuser' id='customer' value='customer' onChange={e => settypeofuser(e.target.value)}/>\r\n                                    <label htmlFor='customer' className='form-check-label' style={{'color':'#000000'}}>Customer</label>\r\n                                </div>\r\n                                <div className='form-check form-check-inline'>\r\n                                    <input type='radio' className='form-check-input' name='typeofuser' value='seller' onChange={e => settypeofuser(e.target.value)}/>\r\n                                    <label htmlFor='seller' className='form-check-label' style={{'color':'#000000'}}>Seller</label>\r\n                                </div>\r\n                                {loginerror === ''?null:<Alert message={loginerror} type='danger'/>}\r\n                                <br/><button tag='input' type='submit' className='btn btn-primary'>Submit</button>\r\n                            </form>\r\n                        </div>\r\n                        <div className='col-sm text-center'>\r\n                            <h1 className='display-6'>OR</h1>\r\n                        </div><br/>\r\n                        <div className='col-sm'>\r\n                            <h1 className='display-6'>New User Signup!</h1>\r\n                            <form onSubmit={e =>submitValueRegister(e)}>\r\n                                <input type=\"text\" className='form-control' placeholder=\"Name\" onChange={e => setname(e.target.value)} required/><br/>\r\n                                <input type=\"email\" className='form-control' placeholder=\"Email\"  onChange={e => setemail(e.target.value)} required/><br/>\r\n                                <input type=\"text\" className='form-control' placeholder=\"Username\" onChange={e => setregusername(e.target.value)} required/><br/><button onClick={checkabailability} className='btn btn-primary'>Check availability</button>\r\n                                {availability===true ? <Alert message='Username available' type='success'/>: availability === false ? <Alert message='Username not available' type='danger'/> :null}\r\n                                <br/>\r\n                                <input type=\"password\" className='form-control' placeholder=\"Password\" onChange={e => setregpassword(e.target.value)} onKeyUp={checkpasswordstrength} required/><br/>\r\n                                {criteriaerror === true ? <Alert message='Passwords do not match criteria' type='danger'/>:criteriaerror === false? <Alert message='Passwords match criteria' type='success'/> :null}\r\n                                <input type=\"password\" className='form-control' placeholder=\"Confirm Password\" onChange={e => setconfirmpassword(e.target.value)} onKeyUp={checkpasswords} required/><br/>\r\n                                {passwordmatch === true ? <Alert message='Passwords do not match' type='danger'/>:passwordmatch === false? <Alert message='Passwords match' type='success'/> :null}\r\n                                <input type=\"tel\" className='form-control' placeholder=\"Phone\" onChange={e => setphone(e.target.value)} required/><br/>\r\n                                <textarea className='form-control' placeholder=\"Address\" onChange={e => setaddress(e.target.value)}></textarea><br/>\r\n                                <small><Link to=\"/registerseller\">Want to sell with us ?</Link></small><br/><br/>\r\n                                {registererror!==''?<Alert message='Internal server error' type='danger'/>:null}\r\n                                <button type='submit' className='btn btn-primary'>Signup</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>       \r\n            </div>             \r\n        );\r\n    }\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}