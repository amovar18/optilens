{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const userAuth = createAsyncThunk('authentication/userAuth', async ({\n  getState,\n  rejectWithValue\n}) => {\n  const {\n    username,\n    password,\n    typeofuser\n  } = getState().authentication;\n\n  try {\n    const response = axios.post('http://localhost:5000/auth/signin', {\n      'username': username,\n      'password': password,\n      'typeofuser': typeofuser\n    }, {\n      withCredentials: true\n    });\n    return (await response).data;\n  } catch (err) {\n    let error = err;\n\n    if (!error.response) {\n      throw err;\n    }\n\n    console.log(error.response.status);\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const userDeauth = createAsyncThunk('authentication/userDeauth', async ({\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get('http://localhost:5000/auth/signout', {\n      withCredentials: true\n    });\n    return response.status;\n  } catch (error) {\n    return rejectWithValue(error.response.status);\n  }\n});\nconst authenticationSlice = createSlice({\n  name: 'authentication',\n  initialState: {\n    user: {},\n    username: '',\n    password: '',\n    typeofuser: '',\n    isAuthenticated: false,\n    error: '',\n    links: [{\n      title: 'Home',\n      path: '/'\n    }, {\n      title: `About us`,\n      path: `/about`\n    }, {\n      title: `Product`,\n      path: `/product/all`\n    }, {\n      title: `FAQ`,\n      path: `/faq`\n    }, {\n      title: `Login`,\n      path: `/login`\n    }]\n  },\n  reducers: {\n    setUsername: (state, action) => {\n      state.username = action.payload;\n    },\n    setPassword: (state, action) => {\n      state.password = action.payload;\n    },\n    setUser: (state, action) => {\n      state.typeofuser = action.payload;\n    }\n  },\n  extraReducers: {\n    [userAuth.fulfilled]: (state, action) => {\n      console.log(action);\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      console.log(state);\n      state.isAuthenticated = true;\n      return action.payload.status;\n    },\n    [userAuth.rejected]: (state, action) => {\n      state.error = action.payload;\n    },\n    [userDeauth.fulfilled]: (state, action) => {\n      state.isAuthenticated = false;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      return action.payload.status;\n    },\n    [userDeauth.rejected]: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nexport const {\n  setPassword,\n  setUser,\n  setUsername\n} = authenticationSlice.actions;\nexport default authenticationSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/authentication/authenticationSlice.js"],"names":["createAsyncThunk","createSlice","axios","userAuth","getState","rejectWithValue","username","password","typeofuser","authentication","response","post","withCredentials","data","err","error","console","log","status","userDeauth","get","authenticationSlice","name","initialState","user","isAuthenticated","links","title","path","reducers","setUsername","state","action","payload","setPassword","setUser","extraReducers","fulfilled","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nexport const userAuth = createAsyncThunk(\r\n    'authentication/userAuth',\r\n    async ( {getState, rejectWithValue} ) =>{\r\n        const {username,password,typeofuser}=getState().authentication;\r\n        try{\r\n            const response = axios.post('http://localhost:5000/auth/signin',{\r\n                'username':username,\r\n                'password':password,\r\n                'typeofuser':typeofuser\r\n            },{withCredentials:true});\r\n            return (await response).data;\r\n        }catch(err){\r\n            let error=err;\r\n            if(!error.response){\r\n                throw err;\r\n            }\r\n            console.log(error.response.status);\r\n            return rejectWithValue(error.response.data);\r\n        }\r\n    }\r\n)\r\nexport const userDeauth = createAsyncThunk(\r\n    'authentication/userDeauth',\r\n    async ({rejectWithValue}) =>{\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/auth/signout',{withCredentials:true});\r\n            return response.status;\r\n        }catch(error){\r\n            return rejectWithValue(error.response.status);\r\n        }\r\n    }\r\n)\r\nconst authenticationSlice = createSlice({\r\n    name:'authentication',\r\n    initialState:{\r\n        user:{},\r\n        username:'',\r\n        password:'',\r\n        typeofuser:'',\r\n        isAuthenticated:false,\r\n        error:'',\r\n        links:[{title:'Home', path:'/'},{ title: `About us`, path: `/about` },{ title: `Product`, path: `/product/all` },{ title: `FAQ`, path: `/faq` },{ title: `Login`, path: `/login` }]\r\n    },\r\n    reducers:{\r\n        setUsername:(state, action)=>{\r\n            state.username=action.payload;\r\n        },setPassword:(state, action)=>{\r\n            state.password=action.payload;\r\n        },setUser:(state,action)=>{\r\n            state.typeofuser=action.payload;\r\n        }\r\n    },\r\n    extraReducers:{\r\n        [userAuth.fulfilled]:(state, action)=>{\r\n            console.log(action)\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            console.log(state);\r\n            state.isAuthenticated=true;\r\n            return action.payload.status;\r\n        },[userAuth.rejected]:(state, action)=>{\r\n            state.error = action.payload;\r\n        },[userDeauth.fulfilled]:(state,action)=>{\r\n            state.isAuthenticated=false;\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            return action.payload.status;\r\n        },[userDeauth.rejected]:(state, action)=>{\r\n            return action.payload;\r\n        }\r\n    }\r\n})\r\nexport const {setPassword,setUser,setUsername}=authenticationSlice.actions;\r\nexport default authenticationSlice.reducer;"]},"metadata":{},"sourceType":"module"}