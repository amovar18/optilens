{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geeta\\\\opticonnect\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { setValue, userAuth } from '../slices/authentication/authenticationSlice';\nimport Alert from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    loginerror\n  } = useSelector(state => state.authentication);\n\n  const submitValueLog = e => {\n    e.preventDefault();\n    dispatch(userAuth()).then(() => {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 47\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"lead\",\n      style: {\n        'fontSize': '1.5rem'\n      },\n      children: \"Login to your account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitValueLog,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        placeholder: \"Username\",\n        id: \"username\",\n        type: \"text\",\n        onChange: e => dispatch(setValue({\n          name: e.target.name,\n          value: e.target.value\n        })),\n        name: \"loginUsername\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 199\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        placeholder: \"Password\",\n        id: \"password\",\n        type: \"password\",\n        onChange: e => dispatch(setValue({\n          name: e.target.name,\n          value: e.target.value\n        })),\n        name: \"loginPassword\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 212\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check form-check-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          className: \"form-check-input\",\n          name: \"typeofuser\",\n          id: \"customer\",\n          value: \"customer\",\n          onChange: e => dispatch(setValue({\n            name: e.target.name,\n            value: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"customer\",\n          className: \"form-check-label\",\n          style: {\n            'color': '#000000'\n          },\n          children: \"Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check form-check-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          className: \"form-check-input\",\n          name: \"typeofuser\",\n          value: \"seller\",\n          onChange: e => dispatch(setValue({\n            name: e.target.name,\n            value: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"seller\",\n          className: \"form-check-label\",\n          style: {\n            'color': '#000000'\n          },\n          children: \"Seller\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), loginerror !== '' ? /*#__PURE__*/_jsxDEV(Alert, {\n        message: loginerror,\n        type: \"danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        tag: \"input\",\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"Yf27jVNcdGCA6RF/ix5VKxY+x80=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/components/Login.js"],"names":["React","useDispatch","useSelector","Redirect","setValue","userAuth","Alert","Login","props","dispatch","loginerror","state","authentication","submitValueLog","e","preventDefault","then","name","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {setValue, userAuth } from '../slices/authentication/authenticationSlice';\r\nimport Alert from './Alert';\r\n\r\nexport default function Login(props){\r\n    const dispatch = useDispatch();\r\n    const {loginerror} = useSelector(state => state.authentication);\r\n    \r\n    const submitValueLog = (e) => {\r\n        e.preventDefault();\r\n        dispatch(userAuth()).then(()=>{return(<Redirect to='/'/>)});\r\n    }\r\n    return(\r\n        <div className='col-sm'>\r\n            <h1 className='lead' style={{'fontSize':'1.5rem'}}>Login to your account</h1>\r\n            <form onSubmit={submitValueLog}>\r\n                <input className='form-control' placeholder='Username' id='username' type='text' onChange={e => dispatch(setValue({name:e.target.name, value:e.target.value}))} name='loginUsername'/><br/>\r\n                <input className='form-control' placeholder='Password' id='password' type='password' onChange={e => dispatch(setValue({name:e.target.name, value:e.target.value}))} name='loginPassword' required/><br/>\r\n                <br/>\r\n                <div className='form-check form-check-inline'>\r\n                    <input type='radio' className='form-check-input' name='typeofuser' id='customer' value='customer' onChange={e => dispatch(setValue({name:e.target.name, value:e.target.value}))}/>\r\n                    <label htmlFor='customer' className='form-check-label' style={{'color':'#000000'}}>Customer</label>\r\n                </div>\r\n                <div className='form-check form-check-inline'>\r\n                    <input type='radio' className='form-check-input' name='typeofuser' value='seller' onChange={e => dispatch(setValue({name:e.target.name, value:e.target.value}))}/>\r\n                    <label htmlFor='seller' className='form-check-label' style={{'color':'#000000'}}>Seller</label>\r\n                </div>\r\n                {loginerror !== '' ?<Alert message={loginerror} type='danger'/>:null}\r\n                <br/><button tag='input' type='submit' className='btn btn-primary'>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}