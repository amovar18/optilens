{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geeta\\\\opticonnect\\\\frontend\\\\src\\\\components\\\\Privateroutecustomer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRouteCustomer = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    isAuthenticated,\n    userType\n  } = useSelector(state => state.authentication);\n  console.log(isAuthenticated, userType);\n\n  if (isAuthenticated === true && userType === 'customer') {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this);\n  }\n};\n\n_s(PrivateRouteCustomer, \"NzTvi1k4NbQ6wM9K25SashlZyvo=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRouteCustomer;\nexport default PrivateRouteCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRouteCustomer\");","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/components/Privateroutecustomer.js"],"names":["React","useSelector","Redirect","Route","PrivateRouteCustomer","component","Component","rest","isAuthenticated","userType","state","authentication","console","log","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAA+B,kBAA/B;;;AACA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AAAA;;AAC9D,QAAM;AAACC,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,MAA8BR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAA/C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,eAAZ,EAA6BC,QAA7B;;AACA,MAAGD,eAAe,KAAK,IAApB,IAA4BC,QAAQ,KAAK,UAA5C,EAAuD;AACnD,wBACI,QAAC,KAAD,OAAWF,IAAX;AAAiB,MAAA,MAAM,EAAEO,KAAK,iBAAK,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD,MAIK;AACD,wBAAQ,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;AAEJ,CAXD;;GAAMV,oB;UACkCH,W;;;KADlCG,oB;AAaN,eAAeA,oBAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route} from 'react-router-dom';\r\nconst PrivateRouteCustomer = ({component: Component, ...rest}) => {\r\n    const {isAuthenticated, userType} = useSelector(state => state.authentication);\r\n    console.log(isAuthenticated, userType)\r\n    if(isAuthenticated === true && userType === 'customer'){\r\n        return (\r\n            <Route {...rest} render={props => (<Component {...props} />)}/>\r\n        );\r\n    }else{\r\n        return (<Redirect to='/'/>);  \r\n    }\r\n    \r\n};\r\n\r\nexport default PrivateRouteCustomer;"]},"metadata":{},"sourceType":"module"}