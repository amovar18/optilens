{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const userAuth = createAsyncThunk('authentication/userAuth', async ({\n  getState\n}) => {\n  const {\n    username,\n    password,\n    typeofuser\n  } = getState().authentication;\n\n  try {\n    const response = axios.post('http://localhost:5000/auth/signin', {\n      'username': username,\n      'password': password,\n      'typeofuser': typeofuser\n    }, {\n      withCredentials: true\n    });\n    return (await response).data;\n  } catch (err) {\n    return Promise.reject(401);\n  }\n});\nexport const customer = createAsyncThunk('authentication/create', async ({\n  getState\n}) => {\n  const {\n    Registration_username,\n    Registration_password,\n    Registration_name,\n    Registration_email,\n    Registration_address,\n    Registration_phone\n  } = getState().authentication;\n\n  try {\n    const response = axios.post('http://localhost:5000/auth/signin', {\n      'name': Registration_name,\n      'username': Registration_username,\n      'phone': Registration_phone,\n      'email': Registration_email,\n      'password': Registration_password,\n      'address': Registration_address\n    }, {\n      withCredentials: true\n    });\n    return (await response).data;\n  } catch (err) {\n    return Promise.reject(401);\n  }\n});\nexport const userDeauth = createAsyncThunk('authentication/userDeauth', async () => {\n  try {\n    const response = await axios.get('http://localhost:5000/auth/signout', {\n      withCredentials: true\n    });\n    return response.status;\n  } catch (error) {\n    return Promise.reject(500);\n  }\n});\nconst authenticationSlice = createSlice({\n  name: 'authentication',\n  initialState: {\n    user: {},\n    username: '',\n    password: '',\n    typeofuser: '',\n    isAuthenticated: false,\n    error: '',\n    links: [{\n      title: 'Home',\n      path: '/'\n    }, {\n      title: `About us`,\n      path: `/about`\n    }, {\n      title: `Product`,\n      path: `/product/all`\n    }, {\n      title: `FAQ`,\n      path: `/faq`\n    }, {\n      title: `Login`,\n      path: `/login`\n    }],\n    Registration_username: '',\n    Registration_password: '',\n    Registration_name: '',\n    Registration_email: '',\n    Registration_address: '',\n    Registration_phone: '',\n    Registration_confirm_password: '',\n    availability: '',\n    passwordMatch: '',\n    criteriaError: ''\n  },\n  reducers: {\n    setUsername: (state, action) => {\n      state.username = action.payload;\n    },\n    setPassword: (state, action) => {\n      state.password = action.payload;\n    },\n    setUser: (state, action) => {\n      state.typeofuser = action.payload;\n    },\n    setRegistrationPassword: (state, action) => {\n      let regex = RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\n\n      if (regex.test(action.payload) === true) {\n        state.Registration_password = action.payload;\n        state.criteriaError = false;\n      } else {\n        state.criteriaError = true;\n      }\n    },\n    setRegistrationConfirmPassword: (state, action) => {\n      if (state.Registration_confirm_password !== undefined && state.Registration_password !== undefined) {\n        if (state.Registration_confirm_password !== state.Registration_password) {\n          state.passwordMatch = false;\n        } else {\n          state.passwordMatch = true;\n        }\n      }\n\n      state.Registration_confirm_password = action.payload;\n    },\n    setRegistrationUsername: (state, action) => {\n      state.Registration_username = action.payload;\n    },\n    setRegistrationAddress: (state, action) => {\n      state.Registration_address = action.payload;\n    },\n    setRegistrationEmail: (state, action) => {\n      state.Registration_email = action.payload;\n    },\n    setRegistrationPhone: (state, action) => {\n      state.Registration_phone = action.payload;\n    },\n    setRegistrationName: (state, action) => {\n      state.Registration_name = action.payload;\n    }\n  },\n  extraReducers: {\n    [userAuth.fulfilled]: (state, action) => {\n      console.log(action);\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      console.log(state);\n      state.isAuthenticated = true;\n      return action.payload.status;\n    },\n    [userAuth.rejected]: (state, action) => {\n      console.log(action);\n      state.error = true;\n    },\n    [userDeauth.fulfilled]: (state, action) => {\n      state.isAuthenticated = false;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      return action.payload.status;\n    },\n    [userDeauth.rejected]: (state, action) => {\n      return action.payload;\n    },\n    [customer.fulfilled]: (state, action) => {},\n    [customer.rejected]: (state, action) => {}\n  }\n});\nexport const {\n  setPassword,\n  setUser,\n  setUsername,\n  setRegistrationAddress,\n  setRegistrationName,\n  setRegistrationEmail,\n  setRegistrationPassword,\n  setRegistrationUsername,\n  setRegistrationPhone\n} = authenticationSlice.actions;\nexport default authenticationSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/authentication/authenticationSlice.js"],"names":["createAsyncThunk","createSlice","axios","userAuth","getState","username","password","typeofuser","authentication","response","post","withCredentials","data","err","Promise","reject","customer","Registration_username","Registration_password","Registration_name","Registration_email","Registration_address","Registration_phone","userDeauth","get","status","error","authenticationSlice","name","initialState","user","isAuthenticated","links","title","path","Registration_confirm_password","availability","passwordMatch","criteriaError","reducers","setUsername","state","action","payload","setPassword","setUser","setRegistrationPassword","regex","RegExp","test","setRegistrationConfirmPassword","undefined","setRegistrationUsername","setRegistrationAddress","setRegistrationEmail","setRegistrationPhone","setRegistrationName","extraReducers","fulfilled","console","log","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nexport const userAuth = createAsyncThunk(\r\n    'authentication/userAuth',\r\n    async ( {getState} ) =>{\r\n        const {username,password,typeofuser}=getState().authentication;\r\n        try{\r\n            const response = axios.post('http://localhost:5000/auth/signin',{\r\n                'username':username,\r\n                'password':password,\r\n                'typeofuser':typeofuser\r\n            },{withCredentials:true});\r\n            return (await response).data;\r\n        }catch(err){\r\n            return Promise.reject(401);\r\n        }\r\n    }\r\n)\r\nexport const customer = createAsyncThunk(\r\n    'authentication/create',\r\n    async ( {getState} ) =>{\r\n        const {Registration_username,Registration_password,Registration_name,Registration_email,Registration_address,Registration_phone}=getState().authentication;\r\n        try{\r\n            const response = axios.post('http://localhost:5000/auth/signin',{\r\n                'name' : Registration_name,\r\n                'username' : Registration_username,\r\n                'phone' : Registration_phone,\r\n                'email' : Registration_email,\r\n                'password' : Registration_password,\r\n                'address': Registration_address\r\n            },{withCredentials:true});\r\n            return (await response).data;\r\n        }catch(err){\r\n            return Promise.reject(401);\r\n        }\r\n    }\r\n)\r\n\r\nexport const userDeauth = createAsyncThunk(\r\n    'authentication/userDeauth',\r\n    async () =>{\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/auth/signout',{withCredentials:true});\r\n            return response.status;\r\n        }catch(error){\r\n            return Promise.reject(500);\r\n        }\r\n    }\r\n)\r\nconst authenticationSlice = createSlice({\r\n    name:'authentication',\r\n    initialState:{\r\n        user:{},\r\n        username:'',\r\n        password:'',\r\n        typeofuser:'',\r\n        isAuthenticated:false,\r\n        error:'',\r\n        links:[{title:'Home', path:'/'},{ title: `About us`, path: `/about` },{ title: `Product`, path: `/product/all` },{ title: `FAQ`, path: `/faq` },{ title: `Login`, path: `/login` }],\r\n\r\n        Registration_username:'',\r\n        Registration_password:'',\r\n        Registration_name:'',\r\n        Registration_email:'',\r\n        Registration_address:'',\r\n        Registration_phone:'',\r\n        Registration_confirm_password:'',\r\n        availability:'',\r\n        passwordMatch:'',\r\n        criteriaError:''\r\n        \r\n    },\r\n    reducers:{\r\n        setUsername:(state, action)=>{\r\n            state.username=action.payload;\r\n        },setPassword:(state, action)=>{\r\n            state.password=action.payload;\r\n        },setUser:(state,action)=>{\r\n            state.typeofuser=action.payload;\r\n        },setRegistrationPassword:(state,action)=>{\r\n            let regex=RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\r\n            if(regex.test(action.payload)===true){\r\n                state.Registration_password=action.payload;\r\n                state.criteriaError=false;\r\n            }else{\r\n                state.criteriaError=true;\r\n            }\r\n        },setRegistrationConfirmPassword:(state,action)=>{\r\n            if (state.Registration_confirm_password !== undefined && state.Registration_password !== undefined) {  \r\n                if (state.Registration_confirm_password !== state.Registration_password) {\r\n                    state.passwordMatch=false;\r\n                }else{\r\n                    state.passwordMatch=true;\r\n                }\r\n            }\r\n            state.Registration_confirm_password=action.payload;\r\n        },setRegistrationUsername:(state,action)=>{\r\n            state.Registration_username=action.payload;\r\n        },setRegistrationAddress:(state,action)=>{\r\n            state.Registration_address=action.payload;\r\n        },setRegistrationEmail:(state,action)=>{\r\n            state.Registration_email=action.payload;\r\n        },setRegistrationPhone:(state,action)=>{\r\n            state.Registration_phone=action.payload;\r\n        },setRegistrationName:(state,action)=>{\r\n            state.Registration_name=action.payload;\r\n        }\r\n    },\r\n    extraReducers:{\r\n        [userAuth.fulfilled]:(state, action)=>{\r\n            console.log(action)\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            console.log(state);\r\n            state.isAuthenticated=true;\r\n            return action.payload.status;\r\n        },[userAuth.rejected]:(state, action)=>{\r\n            console.log(action);\r\n            state.error = true;\r\n        },[userDeauth.fulfilled]:(state,action)=>{\r\n            state.isAuthenticated=false;\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            return action.payload.status;\r\n        },[userDeauth.rejected]:(state, action)=>{\r\n            return action.payload;\r\n        },[customer.fulfilled]:(state, action)=>{\r\n\r\n        },[customer.rejected]:(state, action)=>{\r\n\r\n        }\r\n    }\r\n})\r\nexport const {setPassword,setUser,setUsername,setRegistrationAddress,setRegistrationName,setRegistrationEmail,setRegistrationPassword,setRegistrationUsername,setRegistrationPhone}=authenticationSlice.actions;\r\nexport default authenticationSlice.reducer;"]},"metadata":{},"sourceType":"module"}