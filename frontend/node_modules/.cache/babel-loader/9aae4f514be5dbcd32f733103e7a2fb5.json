{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const cartAdd = createAsyncThunk('cart/Add', async (id, lens_details, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('http://localhost:5000/cart/addtocart', {\n      withCredentials: true,\n      data: {\n        'id': id,\n        'lens_details': lens_details\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.status);\n  }\n});\nexport const cartDelete = createAsyncThunk('cart/delete', async id => {\n  const response = await axios.delete('http://localhost:5000/cart/delete', {\n    withCredentials: true,\n    data: {\n      'pid': id\n    }\n  });\n  return response.data;\n});\nexport const cartGet = createAsyncThunk('cart/getCart', async () => {\n  const response = await axios.get('http://localhost:5000/cart/getcart', {\n    withCredentials: true\n  });\n  return response.data;\n});\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    cart: [],\n    total_price: 0\n  },\n  reducers: {},\n  extraReducers: {\n    [cartAdd.fulfilled]: (state, action) => {\n      state.push(action.payload);\n    },\n    [cartDelete.fulfilled]: (state, action) => {\n      state = action.payload;\n      return state;\n    },\n    [cartGet.fulfilled]: (state, action) => {\n      state = action.payload;\n      return state;\n    },\n    [cartAdd.rejected]: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nexport default cartSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/cart/cartSlice.js"],"names":["createAsyncThunk","createSlice","axios","cartAdd","id","lens_details","rejectWithValue","response","post","withCredentials","data","error","status","cartDelete","delete","cartGet","get","cartSlice","name","initialState","cart","total_price","reducers","extraReducers","fulfilled","state","action","push","payload","rejected","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,OAAO,GAAGH,gBAAgB,CACnC,UADmC,EAEnC,OAAOI,EAAP,EAAUC,YAAV,EAAuB;AAACC,EAAAA;AAAD,CAAvB,KAA2C;AACvC,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAN,CAAW,sCAAX,EAAkD;AAACC,MAAAA,eAAe,EAAC,IAAjB;AACzEC,MAAAA,IAAI,EAAC;AAAC,cAAKN,EAAN;AAAS,wBAAeC;AAAxB;AADoE,KAAlD,CAAvB;AAEA,WAAOE,QAAQ,CAACG,IAAhB;AACH,GAJD,CAIC,OAAMC,KAAN,EAAY;AACT,WAAOL,eAAe,CAACK,KAAK,CAACJ,QAAN,CAAeK,MAAhB,CAAtB;AACH;AACJ,CAVkC,CAAhC;AAYP,OAAO,MAAMC,UAAU,GAAGb,gBAAgB,CACtC,aADsC,EAEtC,MAAOI,EAAP,IAAY;AACR,QAAMG,QAAQ,GAAG,MAAML,KAAK,CAACY,MAAN,CAAa,mCAAb,EAAiD;AAACL,IAAAA,eAAe,EAAC,IAAjB;AAAsBC,IAAAA,IAAI,EAAC;AAAC,aAAMN;AAAP;AAA3B,GAAjD,CAAvB;AACA,SAAOG,QAAQ,CAACG,IAAhB;AACH,CALqC,CAAnC;AAOP,OAAO,MAAMK,OAAO,GAAGf,gBAAgB,CACnC,cADmC,EAEnC,YAAU;AACN,QAAMO,QAAQ,GAAG,MAAML,KAAK,CAACc,GAAN,CAAU,oCAAV,EAA+C;AAACP,IAAAA,eAAe,EAAC;AAAjB,GAA/C,CAAvB;AACA,SAAOF,QAAQ,CAACG,IAAhB;AACH,CALkC,CAAhC;AAOP,MAAMO,SAAS,GAAGhB,WAAW,CAAC;AAC1BiB,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,IAAI,EAAC,EADI;AAETC,IAAAA,WAAW,EAAC;AAFH,GAFa;AAM1BC,EAAAA,QAAQ,EAAC,EANiB;AAO1BC,EAAAA,aAAa,EAAC;AACV,KAACpB,OAAO,CAACqB,SAAT,GAAoB,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAEjCD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACH,KAJS;AAKV,KAACf,UAAU,CAACW,SAAZ,GAAuB,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACnCD,MAAAA,KAAK,GAACC,MAAM,CAACE,OAAb;AACA,aAAOH,KAAP;AACH,KARS;AASV,KAACV,OAAO,CAACS,SAAT,GAAoB,CAACC,KAAD,EAAQC,MAAR,KAAiB;AACjCD,MAAAA,KAAK,GAACC,MAAM,CAACE,OAAb;AACA,aAAOH,KAAP;AACH,KAZS;AAaV,KAACtB,OAAO,CAAC0B,QAAT,GAAoB,CAACJ,KAAD,EAAQC,MAAR,KAAiB;AACjC,aAAOA,MAAM,CAACE,OAAd;AACH;AAfS;AAPY,CAAD,CAA7B;AA0BA,eAAeX,SAAS,CAACa,OAAzB","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nexport const cartAdd = createAsyncThunk(\r\n    'cart/Add',\r\n    async (id,lens_details,{rejectWithValue})=>{\r\n        try{\r\n            const response = await axios.post('http://localhost:5000/cart/addtocart',{withCredentials:true,\r\n            data:{'id':id,'lens_details':lens_details}});\r\n            return response.data;\r\n        }catch(error){\r\n            return rejectWithValue(error.response.status);\r\n        }\r\n    }\r\n)\r\nexport const cartDelete = createAsyncThunk(\r\n    'cart/delete',\r\n    async (id)=>{\r\n        const response = await axios.delete('http://localhost:5000/cart/delete',{withCredentials:true,data:{'pid':id}});\r\n        return response.data;\r\n    }\r\n)\r\nexport const cartGet = createAsyncThunk(\r\n    'cart/getCart',\r\n    async ()=>{\r\n        const response = await axios.get('http://localhost:5000/cart/getcart',{withCredentials:true});\r\n        return response.data;\r\n    }\r\n)\r\nconst cartSlice = createSlice({\r\n    name:'cart',\r\n    initialState:{\r\n        cart:[],\r\n        total_price:0\r\n    },\r\n    reducers:{},\r\n    extraReducers:{\r\n        [cartAdd.fulfilled]:(state, action)=>{\r\n            \r\n            state.push(action.payload);\r\n        },\r\n        [cartDelete.fulfilled]:(state,action)=>{\r\n            state=action.payload;\r\n            return state;\r\n        },\r\n        [cartGet.fulfilled]:(state, action)=>{\r\n            state=action.payload;\r\n            return state;\r\n        },\r\n        [cartAdd.rejected]: (state, action)=>{\r\n            return action.payload;\r\n        }\r\n    }\r\n\r\n})\r\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}