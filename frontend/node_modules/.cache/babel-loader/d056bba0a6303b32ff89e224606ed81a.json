{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst userAuth = createAsyncThunk('auth/userAuth', async (username, password, typeofuser, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('http://localhost:5000/auth/signin', {\n      data: {\n        'username': username,\n        'password': password,\n        'typeofuser': typeofuser\n      },\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.status);\n  }\n});\nconst userDeauth = createAsyncThunk('auth/userDeauth', async ({\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get('http://localhost:5000/auth/signout', {\n      withCredentials: true\n    });\n    return response.status;\n  } catch (error) {\n    return rejectWithValue(error.response.status);\n  }\n});\nconst authenticationSlice = createSlice({\n  name: 'authentication',\n  initialState: {\n    user: {},\n    isAuthenticated: false,\n    links: [{\n      title: 'Home',\n      path: '/'\n    }, {\n      title: `About us`,\n      path: `/about`\n    }, {\n      title: `Product`,\n      path: `/product/all`\n    }, {\n      title: `FAQ`,\n      path: `/faq`\n    }, {\n      title: `Login`,\n      path: `/login`\n    }]\n  },\n  reducers: {},\n  extraReducers: {\n    [userAuth.fulfilled]: (state, action) => {\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      state.isAuthenticated = true;\n      return action.payload.status;\n    },\n    [userAuth.rejected]: (state, action) => {\n      return action.payload;\n    },\n    [userDeauth.fulfilled]: (state, action) => {\n      state.isAuthenticated = false;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      return action.payload.status;\n    },\n    [userDeauth.rejected]: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nexport default authenticationSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/authentication/authenticationSlice.js"],"names":["createAsyncThunk","createSlice","axios","userAuth","username","password","typeofuser","rejectWithValue","response","post","data","withCredentials","error","status","userDeauth","get","authenticationSlice","name","initialState","user","isAuthenticated","links","title","path","reducers","extraReducers","fulfilled","state","action","payload","rejected","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nconst userAuth = createAsyncThunk(\r\n    'auth/userAuth',\r\n    async (username, password, typeofuser, {rejectWithValue}) =>{\r\n        try{\r\n            const response = await axios.post('http://localhost:5000/auth/signin',{\r\n                data:{'username':username,'password':password,'typeofuser':typeofuser},withCredentials:true});\r\n            return response.data;\r\n        }catch(error){\r\n            return rejectWithValue(error.response.status);\r\n        }\r\n    }\r\n)\r\nconst userDeauth = createAsyncThunk(\r\n    'auth/userDeauth',\r\n    async ({rejectWithValue}) =>{\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/auth/signout',{withCredentials:true});\r\n            return response.status;\r\n        }catch(error){\r\n            return rejectWithValue(error.response.status);\r\n        }\r\n    }\r\n)\r\nconst authenticationSlice = createSlice({\r\n    name:'authentication',\r\n    initialState:{\r\n        user:{},\r\n        isAuthenticated:false,\r\n        links:[{title:'Home', path:'/'},{ title: `About us`, path: `/about` },{ title: `Product`, path: `/product/all` },{ title: `FAQ`, path: `/faq` },{ title: `Login`, path: `/login` }]\r\n    },\r\n    reducers:{},\r\n    extraReducers:{\r\n        [userAuth.fulfilled]:(state, action)=>{\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            state.isAuthenticated=true;\r\n            return action.payload.status;\r\n        },[userAuth.rejected]:(state, action)=>{\r\n            return action.payload;\r\n        },[userDeauth.fulfilled]:(state,action)=>{\r\n            state.isAuthenticated=false;\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            return action.payload.status;\r\n        },[userDeauth.rejected]:(state, action)=>{\r\n            return action.payload;\r\n        }\r\n    }\r\n})\r\nexport default authenticationSlice.reducer;"]},"metadata":{},"sourceType":"module"}