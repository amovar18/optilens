{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const checkUsernameAvailability = createAsyncThunk('seller/checkUsernameAvailability', async ({\n  getState\n}) => {\n  const {\n    Registration_username\n  } = getState().authentication;\n\n  if (Registration_username !== '') {\n    try {\n      const response = axios.get('http://localhost:5000/user/availability/' + Registration_username, {\n        withCredentials: true\n      });\n      return (await response).data;\n    } catch (err) {\n      return Promise.reject(401);\n    }\n  }\n});\nexport const createSeller = createAsyncThunk('seller/create', async ({\n  getState\n}) => {\n  const {\n    username,\n    password,\n    name,\n    email,\n    address,\n    phone,\n    owner,\n    company_registration\n  } = getState().seller;\n  const formData = new FormData();\n  formData.append('email', email);\n  formData.append('password', password);\n  formData.append('name', name);\n  formData.append('owner', owner);\n  formData.append('username', username);\n  formData.append('phone', phone);\n  formData.append('image', company_registration);\n\n  try {\n    const response = axios.post('http://localhost:5000/seller/create', {\n      'name': Registration_name,\n      'username': Registration_username,\n      'phone': Registration_phone,\n      'email': Registration_email,\n      'password': Registration_password,\n      'address': Registration_address\n    }, {\n      withCredentials: true\n    });\n    return (await response).data;\n  } catch (err) {\n    return Promise.reject(401);\n  }\n});\nconst sellerSlice = createSlice({\n  name: 'seller',\n  initialState: {\n    email: '',\n    password: '',\n    confirm_password: '',\n    type_of_user: '',\n    name: '',\n    owner: '',\n    username: '',\n    phone: '',\n    city: '',\n    state: '',\n    pincode: '',\n    address_line_1: '',\n    address_line_2: '',\n    area: '',\n    company_registration: '',\n    registrationError: '',\n    passwordMatch: '',\n    criteriaError: '',\n    availability: 'NaN'\n  },\n  reducers: {\n    setValue: (state, action) => {\n      state[action.payload.name] = action.payload.value;\n    },\n    setFile: (state, action) => {\n      state[action.payload.name] = action.payload.value;\n    },\n    setpasswordMatch: (state, action) => {\n      state.passwordMatch = action.payload.value;\n    },\n    setcriteriaError: (state, action) => {\n      state.criteriaError = action.payload.value;\n    },\n    setavailability: (state, action) => {\n      state.availability = action.payload.value;\n    }\n  },\n  extraReducers: {\n    [userAuth.fulfilled]: (state, action) => {\n      console.log(action);\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      console.log(state);\n      state.isAuthenticated = true;\n      return action.payload.status;\n    },\n    [userAuth.rejected]: (state, action) => {\n      state.error = true;\n    },\n    [userDeauth.fulfilled]: (state, action) => {\n      state.isAuthenticated = false;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      return action.payload.status;\n    },\n    [userDeauth.rejected]: (state, action) => {\n      return action.payload;\n    },\n    [createCustomer.fulfilled]: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      return action.payload.status;\n    },\n    [createCustomer.rejected]: (state, action) => {\n      state.registrationError = true;\n    },\n    [checkUsernameAvailability.fulfilled]: (state, action) => {\n      state.availability = action.payload;\n    },\n    [checkUsernameAvailability.rejected]: (state, action) => {\n      state.availability = false;\n    }\n  }\n});\nexport const {\n  setValue,\n  setFile,\n  setavailability,\n  setpasswordMatch,\n  setcriteriaError\n} = sellerSlice.actions;\nexport default sellerSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/seller/sellerSlice.js"],"names":["createAsyncThunk","createSlice","axios","checkUsernameAvailability","getState","Registration_username","authentication","response","get","withCredentials","data","err","Promise","reject","createSeller","username","password","name","email","address","phone","owner","company_registration","seller","formData","FormData","append","post","Registration_name","Registration_phone","Registration_email","Registration_password","Registration_address","sellerSlice","initialState","confirm_password","type_of_user","city","state","pincode","address_line_1","address_line_2","area","registrationError","passwordMatch","criteriaError","availability","reducers","setValue","action","payload","value","setFile","setpasswordMatch","setcriteriaError","setavailability","extraReducers","userAuth","fulfilled","console","log","user","links","isAuthenticated","status","rejected","error","userDeauth","createCustomer","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nexport const checkUsernameAvailability = createAsyncThunk(\r\n    'seller/checkUsernameAvailability',\r\n    async ( {getState} ) =>{\r\n        const {Registration_username} = getState().authentication;\r\n        if(Registration_username!==''){\r\n            try{\r\n                const response = axios.get('http://localhost:5000/user/availability/'+Registration_username,{withCredentials:true});\r\n                return (await response).data;\r\n            }catch(err){\r\n                return Promise.reject(401);\r\n            }\r\n        }\r\n    }\r\n)\r\nexport const createSeller = createAsyncThunk(\r\n    'seller/create',\r\n    async ( {getState} ) =>{\r\n        const {username, password, name, email, address, phone, owner, company_registration}=getState().seller;\r\n        const formData = new FormData(); \r\n            formData.append('email',email);\r\n            formData.append('password',password);\r\n            formData.append('name',name);\r\n            formData.append('owner',owner);\r\n            formData.append('username',username);\r\n            formData.append('phone',phone);\r\n            formData.append('image', company_registration);\r\n            \r\n        try{\r\n            const response = axios.post('http://localhost:5000/seller/create',{\r\n                'name' : Registration_name,\r\n                'username' : Registration_username,\r\n                'phone' : Registration_phone,\r\n                'email' : Registration_email,\r\n                'password' : Registration_password,\r\n                'address': Registration_address\r\n            },{withCredentials:true});\r\n            return (await response).data;\r\n        }catch(err){\r\n            return Promise.reject(401);\r\n        }\r\n    }\r\n)\r\nconst sellerSlice = createSlice({\r\n    name:'seller',\r\n    initialState:{\r\n        email: '',\r\n        password:'',\r\n        confirm_password:'',\r\n        type_of_user:'',\r\n        name:'',\r\n        owner:'',\r\n        username:'',\r\n        phone:'',\r\n        city:'',\r\n\t\tstate:'',\r\n\t\tpincode:'',\r\n\t\taddress_line_1:'',\r\n\t\taddress_line_2:'',\r\n\t\tarea:'',\r\n        company_registration:'',\r\n        registrationError:'',\r\n        passwordMatch:'',\r\n        criteriaError:'',\r\n        availability:'NaN'\r\n        \r\n    },\r\n    reducers:{\r\n        setValue:(state,action)=>{\r\n            state[action.payload.name] = action.payload.value;\r\n        },setFile:(state, action)=>{\r\n            state[action.payload.name] = action.payload.value;\r\n        },setpasswordMatch:(state, action)=>{\r\n            state.passwordMatch = action.payload.value;\r\n        },setcriteriaError:(state, action)=>{\r\n            state.criteriaError = action.payload.value;\r\n        },setavailability:(state, action)=>{\r\n            state.availability = action.payload.value;\r\n        },\r\n    },\r\n    extraReducers:{\r\n        [userAuth.fulfilled]:(state, action)=>{\r\n            console.log(action)\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            console.log(state);\r\n            state.isAuthenticated=true;\r\n            return action.payload.status;\r\n        },[userAuth.rejected]:(state, action)=>{\r\n            state.error = true;\r\n        },[userDeauth.fulfilled]:(state,action)=>{\r\n            state.isAuthenticated=false;\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            return action.payload.status;\r\n        },[userDeauth.rejected]:(state, action)=>{\r\n            return action.payload;\r\n        },[createCustomer.fulfilled]:(state, action)=>{\r\n            state.isAuthenticated=true;\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            return action.payload.status;\r\n        },[createCustomer.rejected]:(state, action)=>{\r\n            state.registrationError = true;\r\n        },[checkUsernameAvailability.fulfilled]:(state, action)=>{\r\n            state.availability = action.payload;\r\n        },[checkUsernameAvailability.rejected]:(state,action)=>{\r\n            state.availability = false;\r\n        }\r\n    }\r\n})\r\nexport const {setValue, setFile, setavailability, setpasswordMatch, setcriteriaError}=sellerSlice.actions;\r\nexport default sellerSlice.reducer;"]},"metadata":{},"sourceType":"module"}