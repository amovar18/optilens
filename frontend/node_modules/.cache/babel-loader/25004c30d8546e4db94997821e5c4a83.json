{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geeta\\\\opticonnect\\\\frontend\\\\src\\\\components\\\\Privateroute.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport Loadingspinner from './Loadingspinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const [isallowed, setAllowed] = useState('loading');\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/user/allowedgeneral',\n      withCredentials: true\n    }).then(response => {\n      setAllowed(response.data);\n    }).catch(error => {\n      setAllowed(false);\n    });\n  });\n\n  if (isallowed === 'loading') {\n    return /*#__PURE__*/_jsxDEV(Loadingspinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  } else if (isallowed === true) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  } else if (isallowed === false) {\n    return window.location = 'http://localhost:3000/insertproduct';\n  }\n};\n\n_s(PrivateRoute, \"1KSk+SQd2lLPpxRigb8ap35wjHg=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/components/Privateroute.js"],"names":["axios","React","useEffect","useState","Route","Loadingspinner","PrivateRoute","component","Component","rest","isallowed","setAllowed","method","url","withCredentials","then","response","data","catch","error","props","window","location"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AAAA;;AACtD,QAAM,CAACC,SAAD,EAAWC,UAAX,IAAyBR,QAAQ,CAAC,SAAD,CAAvC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVF,IAAAA,KAAK,CAAC;AACFY,MAAAA,MAAM,EAAC,KADL;AAEFC,MAAAA,GAAG,EAAC,2CAFF;AAGFC,MAAAA,eAAe,EAAC;AAHd,KAAD,CAAL,CAIGC,IAJH,CAISC,QAAD,IAAY;AAChBL,MAAAA,UAAU,CAACK,QAAQ,CAACC,IAAV,CAAV;AACH,KAND,EAMGC,KANH,CAMUC,KAAD,IAAS;AACdR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KARD;AASH,GAVQ,CAAT;;AAWA,MAAGD,SAAS,KAAG,SAAf,EAAyB;AACrB,wBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEM,IAAGA,SAAS,KAAG,IAAf,EAAoB;AACtB,wBACI,QAAC,KAAD,OAAWD,IAAX;AAAiB,MAAA,MAAM,EAAEW,KAAK,iBAAK,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJK,MAIA,IAAGV,SAAS,KAAG,KAAf,EAAqB;AACvB,WAAQW,MAAM,CAACC,QAAP,GAAgB,qCAAxB;AACH;AACJ,CAtBD;;GAAMhB,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Route} from 'react-router-dom';\r\nimport Loadingspinner from './Loadingspinner';\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    const [isallowed,setAllowed] = useState('loading');\r\n    useEffect(()=>{\r\n        axios({\r\n            method:'GET',\r\n            url:'http://localhost:5000/user/allowedgeneral',\r\n            withCredentials:true\r\n        }).then((response)=>{\r\n            setAllowed(response.data);\r\n        }).catch((error)=>{\r\n            setAllowed(false);\r\n        })\r\n    })\r\n    if(isallowed==='loading'){\r\n        return(<Loadingspinner/>);\r\n    }else if(isallowed===true){\r\n        return (\r\n            <Route {...rest} render={props => (<Component {...props} />)}/>\r\n        );\r\n    }else if(isallowed===false){\r\n        return (window.location='http://localhost:3000/insertproduct'); \r\n    }\r\n};\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}