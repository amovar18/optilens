{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const userAuth = createAsyncThunk('authentication/userAuth', async ({\n  getState,\n  rejectWithValue\n}) => {\n  console.log(getState());\n  const {\n    username,\n    password,\n    typeofuser\n  } = getState();\n  ;\n  await axios({\n    method: 'POST',\n    url: 'http://localhost:5000/auth/signin',\n    data: {\n      'username': username,\n      'password': password,\n      'typeofuser': typeofuser\n    },\n    withCredentials: true\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    return rejectWithValue(error.response);\n  });\n});\nexport const userDeauth = createAsyncThunk('authentication/userDeauth', async ({\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get('http://localhost:5000/auth/signout', {\n      withCredentials: true\n    });\n    return response.status;\n  } catch (error) {\n    return rejectWithValue(error.response.status);\n  }\n});\nconst authenticationSlice = createSlice({\n  name: 'authentication',\n  initialState: {\n    user: {},\n    username: '',\n    password: '',\n    typeofuser: '',\n    isAuthenticated: false,\n    error: '',\n    links: [{\n      title: 'Home',\n      path: '/'\n    }, {\n      title: `About us`,\n      path: `/about`\n    }, {\n      title: `Product`,\n      path: `/product/all`\n    }, {\n      title: `FAQ`,\n      path: `/faq`\n    }, {\n      title: `Login`,\n      path: `/login`\n    }]\n  },\n  reducers: {\n    setUsername: (state, action) => {\n      state.username = action.payload;\n    },\n    setPassword: (state, action) => {\n      state.password = action.payload;\n    },\n    setUser: (state, action) => {\n      state.typeofuser = action.payload;\n    }\n  },\n  extraReducers: {\n    [userAuth.fulfilled]: (state, action) => {\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      console.log(state);\n      state.isAuthenticated = true;\n      return action.payload.status;\n    },\n    [userAuth.rejected]: (state, action) => {\n      state.error = action.payload;\n    },\n    [userDeauth.fulfilled]: (state, action) => {\n      state.isAuthenticated = false;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      return action.payload.status;\n    },\n    [userDeauth.rejected]: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nexport const {\n  setPassword,\n  setUser,\n  setUsername\n} = authenticationSlice.actions;\nexport default authenticationSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/authentication/authenticationSlice.js"],"names":["createAsyncThunk","createSlice","axios","userAuth","getState","rejectWithValue","console","log","username","password","typeofuser","method","url","data","withCredentials","then","response","catch","error","userDeauth","get","status","authenticationSlice","name","initialState","user","isAuthenticated","links","title","path","reducers","setUsername","state","action","payload","setPassword","setUser","extraReducers","fulfilled","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nexport const userAuth = createAsyncThunk(\r\n    'authentication/userAuth',\r\n    async ( {getState, rejectWithValue} ) =>{\r\n        console.log(getState());\r\n        const {username,password,typeofuser}=getState();;\r\n        await axios({\r\n            method:'POST',\r\n            url:'http://localhost:5000/auth/signin',\r\n            data:{\r\n                'username':username,\r\n                'password':password,\r\n                'typeofuser':typeofuser\r\n            },\r\n            withCredentials:true\r\n        }).then((response)=>{\r\n            return response.data;\r\n        }).catch((error)=>{\r\n            return rejectWithValue(error.response)\r\n        })\r\n    }\r\n)\r\nexport const userDeauth = createAsyncThunk(\r\n    'authentication/userDeauth',\r\n    async ({rejectWithValue}) =>{\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/auth/signout',{withCredentials:true});\r\n            return response.status;\r\n        }catch(error){\r\n            return rejectWithValue(error.response.status);\r\n        }\r\n    }\r\n)\r\nconst authenticationSlice = createSlice({\r\n    name:'authentication',\r\n    initialState:{\r\n        user:{},\r\n        username:'',\r\n        password:'',\r\n        typeofuser:'',\r\n        isAuthenticated:false,\r\n        error:'',\r\n        links:[{title:'Home', path:'/'},{ title: `About us`, path: `/about` },{ title: `Product`, path: `/product/all` },{ title: `FAQ`, path: `/faq` },{ title: `Login`, path: `/login` }]\r\n    },\r\n    reducers:{\r\n        setUsername:(state, action)=>{\r\n            state.username=action.payload;\r\n        },setPassword:(state, action)=>{\r\n            state.password=action.payload;\r\n        },setUser:(state,action)=>{\r\n            state.typeofuser=action.payload;\r\n        }\r\n    },\r\n    extraReducers:{\r\n        [userAuth.fulfilled]:(state, action)=>{\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            console.log(state);\r\n            state.isAuthenticated=true;\r\n            return action.payload.status;\r\n        },[userAuth.rejected]:(state, action)=>{\r\n            state.error = action.payload;\r\n        },[userDeauth.fulfilled]:(state,action)=>{\r\n            state.isAuthenticated=false;\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            return action.payload.status;\r\n        },[userDeauth.rejected]:(state, action)=>{\r\n            return action.payload;\r\n        }\r\n    }\r\n})\r\nexport const {setPassword,setUser,setUsername}=authenticationSlice.actions;\r\nexport default authenticationSlice.reducer;"]},"metadata":{},"sourceType":"module"}