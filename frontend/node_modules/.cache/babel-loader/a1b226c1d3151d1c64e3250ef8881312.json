{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const productSort = createAsyncThunk('product/Sort', async ({\n  getState\n}) => {\n  const {\n    type,\n    price,\n    sort,\n    page\n  } = getState().product;\n\n  try {\n    const response = await axios.get('http://localhost:5000/product/sort/' + type + '/' + price + '/' + sort + '/' + page, {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error.response.status);\n  }\n});\nexport const productGetSingle = createAsyncThunk('porduct/productGetSingle', async id => {\n  try {\n    const response = await axios.get('http://localhost:5000/product/getsingle/' + id, {\n      withCredentials: true,\n      data: {\n        'pid': id\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error.response.status);\n  }\n});\nexport const productGet = createAsyncThunk('product/productGet', async ({\n  getState\n}) => {\n  const {\n    type,\n    page,\n    price,\n    sort\n  } = getState().product;\n\n  try {\n    const response = await axios.get('http://localhost:5000/product/sort/' + type + '/' + price + '/' + sort + '/' + page, {\n      withCredentials: true\n    });\n    return response.status;\n  } catch (error) {\n    return Promise.reject(error.response.status);\n  }\n});\nexport const productAdd = createAsyncThunk('product/productAdd', async ({\n  getState\n}) => {\n  const {\n    productname,\n    productprice,\n    producttype,\n    frontimage,\n    leftimage,\n    rightimage,\n    mainimage,\n    productdescription,\n    brand\n  } = getState().product;\n  const formData = new FormData();\n  formData.append(\"image\", mainimage);\n  formData.append(\"image\", frontimage);\n  formData.append(\"image\", leftimage);\n  formData.append(\"image\", rightimage);\n  formData.append(\"producttype\", producttype);\n  formData.append(\"productname\", productname);\n  formData.append(\"productprice\", productprice);\n  formData.append(\"brand\", brand);\n  formData.append(\"productdescription\", productdescription);\n\n  try {\n    const response = await axios.post('http://localhost:5000/product/create', {\n      withCredentials: true,\n      Headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      data: formData\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error.response.status);\n  }\n});\nconst productSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    products: [],\n    singleProduct: [],\n    total_pages: 0,\n    current_page: 0,\n    sort: 'NaN',\n    type: 'NaN',\n    productname: '',\n    productprice: 0,\n    producttype: '',\n    frontimage: '',\n    leftimage: '',\n    rightimage: '',\n    mainimage: '',\n    productdescription: '',\n    brand: ''\n  },\n  reducers: {},\n  extraReducers: {\n    [productSort.fulfilled]: (state, action) => {\n      state.push(action.payload);\n    },\n    [productGetSingle.fulfilled]: (state, action) => {\n      state.singleProduct = action.payload;\n      return state;\n    },\n    [productGet.fulfilled]: (state, action) => {\n      state = action.payload;\n      return state;\n    },\n    [productAdd.fulfilled]: (state, action) => {\n      return action.payload;\n    },\n    [productAdd.rejected]: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nexport default productSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/product/productSlice.js"],"names":["createAsyncThunk","createSlice","axios","productSort","getState","type","price","sort","page","product","response","get","withCredentials","data","error","Promise","reject","status","productGetSingle","id","productGet","productAdd","productname","productprice","producttype","frontimage","leftimage","rightimage","mainimage","productdescription","brand","formData","FormData","append","post","Headers","productSlice","name","initialState","products","singleProduct","total_pages","current_page","reducers","extraReducers","fulfilled","state","action","push","payload","rejected","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nexport const productSort = createAsyncThunk(\r\n    'product/Sort',\r\n    async ({getState})=>{\r\n        const {type, price, sort, page} = getState().product;\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/product/sort/'+type+'/'+price+'/'+sort+'/'+page,{withCredentials:true});\r\n            return response.data;\r\n        }catch(error){\r\n            return Promise.reject(error.response.status);\r\n        }\r\n    }\r\n)\r\nexport const productGetSingle = createAsyncThunk(\r\n    'porduct/productGetSingle',\r\n    async (id)=>{\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/product/getsingle/'+id,{withCredentials:true,data:{'pid':id}});\r\n            return response.data;\r\n        }catch(error){\r\n            return Promise.reject(error.response.status);\r\n        }\r\n    }\r\n)\r\nexport const productGet = createAsyncThunk(\r\n    'product/productGet',\r\n    async ({getState})=>{\r\n        const {type, page, price, sort} = getState().product;\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/product/sort/'+type+'/'+price+'/'+sort+'/'+page,{withCredentials:true});\r\n            return response.status;\r\n        }catch(error){\r\n            return Promise.reject(error.response.status);\r\n        }    \r\n    }\r\n)\r\nexport const productAdd = createAsyncThunk(\r\n    'product/productAdd',\r\n    async ({getState})=>{\r\n        const {productname, productprice, producttype, frontimage, leftimage, rightimage, mainimage, productdescription, brand} = getState().product;\r\n        const formData = new FormData();\r\n        formData.append( \"image\", mainimage);\r\n        formData.append( \"image\", frontimage);\r\n        formData.append( \"image\", leftimage);\r\n        formData.append( \"image\", rightimage);\r\n        formData.append( \"producttype\", producttype);\r\n        formData.append( \"productname\", productname);\r\n        formData.append( \"productprice\", productprice);\r\n        formData.append( \"brand\", brand);\r\n        formData.append( \"productdescription\", productdescription);\r\n        try{\r\n            const response = await axios.post('http://localhost:5000/product/create',{withCredentials:true,Headers:{'Content-Type':'multipart/form-data'},data:formData});\r\n            return response.data;\r\n        }catch(error){\r\n            return Promise.reject(error.response.status);\r\n        }\r\n    }\r\n)\r\nconst productSlice = createSlice({\r\n    name:'cart',\r\n    initialState:{\r\n        products:[],\r\n        singleProduct:[],\r\n        total_pages:0,\r\n        current_page:0,\r\n        sort:'NaN',\r\n        type:'NaN',\r\n\r\n        productname:'',\r\n        productprice:0,\r\n        producttype:'',\r\n        frontimage:'',\r\n        leftimage:'',\r\n        rightimage:'',\r\n        mainimage:'',\r\n        productdescription:'',\r\n        brand:''\r\n    },\r\n    reducers:{},\r\n    extraReducers:{\r\n        [productSort.fulfilled]:(state, action)=>{\r\n            state.push(action.payload);\r\n        },\r\n        [productGetSingle.fulfilled]:(state,action)=>{\r\n            state.singleProduct=action.payload;\r\n            return state;\r\n        },\r\n        [productGet.fulfilled]:(state, action)=>{\r\n            state=action.payload;\r\n            return state;\r\n        },\r\n        [productAdd.fulfilled]:(state, action)=>{\r\n            return action.payload;\r\n        },\r\n        [productAdd.rejected]:(state, action)=>{\r\n            return action.payload;\r\n        }\r\n    }\r\n\r\n})\r\nexport default productSlice.reducer;"]},"metadata":{},"sourceType":"module"}