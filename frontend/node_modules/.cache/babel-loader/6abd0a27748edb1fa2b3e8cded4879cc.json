{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const userAuth = createAsyncThunk('authentication/userAuth', async ({\n  getState\n}) => {\n  const {\n    username,\n    password,\n    typeofuser\n  } = getState().authentication;\n\n  try {\n    const response = axios.post('http://localhost:5000/auth/signin', {\n      'username': username,\n      'password': password,\n      'typeofuser': typeofuser\n    }, {\n      withCredentials: true\n    });\n    return (await response).data;\n  } catch (err) {\n    return Promise.reject(401);\n  }\n});\nexport const checkUsernameAvailability = createAsyncThunk('authentication/checkUsernameAvailability', async ({\n  getState\n}) => {\n  const {\n    Registration_username\n  } = getState().authentication;\n\n  if (Registration_username !== '') {\n    try {\n      const response = axios.get('http://localhost:5000/user/availability/' + Registration_username, {\n        withCredentials: true\n      });\n      return (await response).data;\n    } catch (err) {\n      return Promise.reject(401);\n    }\n  }\n});\nexport const createCustomer = createAsyncThunk('authentication/create', async ({\n  getState\n}) => {\n  const {\n    Registration_username,\n    Registration_password,\n    Registration_name,\n    Registration_email,\n    Registration_address,\n    Registration_phone\n  } = getState().authentication;\n\n  try {\n    const response = axios.post('http://localhost:5000/user/create', {\n      'name': Registration_name,\n      'username': Registration_username,\n      'phone': Registration_phone,\n      'email': Registration_email,\n      'password': Registration_password,\n      'address': Registration_address\n    }, {\n      withCredentials: true\n    });\n    return (await response).data;\n  } catch (err) {\n    return Promise.reject(401);\n  }\n});\nexport const userDeauth = createAsyncThunk('authentication/userDeauth', async () => {\n  try {\n    const response = await axios.get('http://localhost:5000/auth/signout', {\n      withCredentials: true\n    });\n    return response.status;\n  } catch (error) {\n    return Promise.reject(500);\n  }\n});\nconst authenticationSlice = createSlice({\n  name: 'authentication',\n  initialState: {\n    user: {},\n    username: '',\n    password: '',\n    typeofuser: '',\n    isAuthenticated: false,\n    error: '',\n    links: [{\n      title: 'Home',\n      path: '/'\n    }, {\n      title: `About us`,\n      path: `/about`\n    }, {\n      title: `Product`,\n      path: `/product/all`\n    }, {\n      title: `FAQ`,\n      path: `/faq`\n    }, {\n      title: `Login`,\n      path: `/login`\n    }],\n    Registration_username: '',\n    Registration_password: '',\n    Registration_name: '',\n    Registration_email: '',\n    Registration_address: '',\n    Registration_phone: '',\n    Registration_confirm_password: '',\n    registrationError: '',\n    passwordMatch: '',\n    criteriaError: '',\n    availability: 'NaN'\n  },\n  reducers: {\n    setpasswordMatch: (state, action) => {\n      state.passwordMatch = action.payload;\n    },\n    setcriteriaMatch: (state, action) => {\n      state.criteriaError = action.payload;\n    },\n    setUsername: (state, action) => {\n      state.username = action.payload;\n    },\n    setPassword: (state, action) => {\n      state.password = action.payload;\n    },\n    setUser: (state, action) => {\n      state.typeofuser = action.payload;\n    },\n    setValue: (state, action) => {\n      state.Registration_password = action.payload;\n    },\n    setRegistrationConfirmPassword: (state, action) => {\n      state.Registration_confirm_password = action.payload;\n    },\n    setRegistrationUsername: (state, action) => {\n      state.Registration_username = action.payload;\n    },\n    setRegistrationAddress: (state, action) => {\n      state.Registration_address = action.payload;\n    },\n    setRegistrationEmail: (state, action) => {\n      state.Registration_email = action.payload;\n    },\n    setRegistrationPhone: (state, action) => {\n      state.Registration_phone = action.payload;\n    },\n    setRegistrationName: (state, action) => {\n      state.Registration_name = action.payload;\n    }\n  },\n  extraReducers: {\n    [userAuth.fulfilled]: (state, action) => {\n      console.log(action);\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      console.log(state);\n      state.isAuthenticated = true;\n      return action.payload.status;\n    },\n    [userAuth.rejected]: (state, action) => {\n      state.error = true;\n    },\n    [userDeauth.fulfilled]: (state, action) => {\n      state.isAuthenticated = false;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      return action.payload.status;\n    },\n    [userDeauth.rejected]: (state, action) => {\n      return action.payload;\n    },\n    [createCustomer.fulfilled]: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      return action.payload.status;\n    },\n    [createCustomer.rejected]: (state, action) => {\n      state.registrationError = true;\n    },\n    [checkUsernameAvailability.fulfilled]: (state, action) => {\n      state.availability = action.payload;\n    },\n    [checkUsernameAvailability.rejected]: (state, action) => {\n      state.availability = false;\n    }\n  }\n});\nexport const {\n  setPassword,\n  setUser,\n  setUsername,\n  setRegistrationAddress,\n  setRegistrationName,\n  setRegistrationEmail,\n  setRegistrationPassword,\n  setRegistrationUsername,\n  setRegistrationPhone,\n  setRegistrationConfirmPassword,\n  setpasswordMatch,\n  setcriteriaMatch\n} = authenticationSlice.actions;\nexport default authenticationSlice.reducer;","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/slices/authentication/authenticationSlice.js"],"names":["createAsyncThunk","createSlice","axios","userAuth","getState","username","password","typeofuser","authentication","response","post","withCredentials","data","err","Promise","reject","checkUsernameAvailability","Registration_username","get","createCustomer","Registration_password","Registration_name","Registration_email","Registration_address","Registration_phone","userDeauth","status","error","authenticationSlice","name","initialState","user","isAuthenticated","links","title","path","Registration_confirm_password","registrationError","passwordMatch","criteriaError","availability","reducers","setpasswordMatch","state","action","payload","setcriteriaMatch","setUsername","setPassword","setUser","setValue","setRegistrationConfirmPassword","setRegistrationUsername","setRegistrationAddress","setRegistrationEmail","setRegistrationPhone","setRegistrationName","extraReducers","fulfilled","console","log","rejected","setRegistrationPassword","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nexport const userAuth = createAsyncThunk(\r\n    'authentication/userAuth',\r\n    async ( {getState} ) =>{\r\n        const {username,password,typeofuser}=getState().authentication;\r\n        try{\r\n            const response = axios.post('http://localhost:5000/auth/signin',{\r\n                'username':username,\r\n                'password':password,\r\n                'typeofuser':typeofuser\r\n            },{withCredentials:true});\r\n            return (await response).data;\r\n        }catch(err){\r\n            return Promise.reject(401);\r\n        }\r\n    }\r\n)\r\nexport const checkUsernameAvailability = createAsyncThunk(\r\n    'authentication/checkUsernameAvailability',\r\n    async ( {getState} ) =>{\r\n        const {Registration_username}=getState().authentication;\r\n        if(Registration_username!==''){\r\n            try{\r\n                const response = axios.get('http://localhost:5000/user/availability/'+Registration_username,{withCredentials:true});\r\n                return (await response).data;\r\n            }catch(err){\r\n                return Promise.reject(401);\r\n            }\r\n        }\r\n    }\r\n)\r\nexport const createCustomer = createAsyncThunk(\r\n    'authentication/create',\r\n    async ( {getState} ) =>{\r\n        const {Registration_username,Registration_password,Registration_name,Registration_email,Registration_address,Registration_phone}=getState().authentication;\r\n        try{\r\n            const response = axios.post('http://localhost:5000/user/create',{\r\n                'name' : Registration_name,\r\n                'username' : Registration_username,\r\n                'phone' : Registration_phone,\r\n                'email' : Registration_email,\r\n                'password' : Registration_password,\r\n                'address': Registration_address\r\n            },{withCredentials:true});\r\n            return (await response).data;\r\n        }catch(err){\r\n            return Promise.reject(401);\r\n        }\r\n    }\r\n)\r\n\r\nexport const userDeauth = createAsyncThunk(\r\n    'authentication/userDeauth',\r\n    async () =>{\r\n        try{\r\n            const response = await axios.get('http://localhost:5000/auth/signout',{withCredentials:true});\r\n            return response.status;\r\n        }catch(error){\r\n            return Promise.reject(500);\r\n        }\r\n    }\r\n)\r\nconst authenticationSlice = createSlice({\r\n    name:'authentication',\r\n    initialState:{\r\n        user:{},\r\n        username:'',\r\n        password:'',\r\n        typeofuser:'',\r\n        isAuthenticated:false,\r\n        error:'',\r\n\r\n        links:[{title:'Home', path:'/'},{ title: `About us`, path: `/about` },{ title: `Product`, path: `/product/all` },{ title: `FAQ`, path: `/faq` },{ title: `Login`, path: `/login` }],\r\n\r\n        Registration_username:'',\r\n        Registration_password:'',\r\n        Registration_name:'',\r\n        Registration_email:'',\r\n        Registration_address:'',\r\n        Registration_phone:'',\r\n        Registration_confirm_password:'',\r\n        registrationError:'',\r\n        passwordMatch:'',\r\n        criteriaError:'',\r\n        availability:'NaN'\r\n        \r\n    },\r\n    reducers:{\r\n        setpasswordMatch:(state, action)=>{\r\n            state.passwordMatch=action.payload;\r\n        },setcriteriaMatch:(state, action)=>{\r\n            state.criteriaError=action.payload;\r\n        },setUsername:(state, action)=>{\r\n            state.username=action.payload;\r\n        },setPassword:(state, action)=>{\r\n            state.password=action.payload;\r\n        },setUser:(state,action)=>{\r\n            state.typeofuser=action.payload;\r\n        },setValue:(state,action)=>{\r\n            state.Registration_password=action.payload;\r\n        },setRegistrationConfirmPassword:(state,action)=>{\r\n            state.Registration_confirm_password=action.payload;\r\n        },setRegistrationUsername:(state,action)=>{\r\n            state.Registration_username=action.payload;\r\n        },setRegistrationAddress:(state,action)=>{\r\n            state.Registration_address=action.payload;\r\n        },setRegistrationEmail:(state,action)=>{\r\n            state.Registration_email=action.payload;\r\n        },setRegistrationPhone:(state,action)=>{\r\n            state.Registration_phone=action.payload;\r\n        },setRegistrationName:(state,action)=>{\r\n            state.Registration_name=action.payload;\r\n        }\r\n    },\r\n    extraReducers:{\r\n        [userAuth.fulfilled]:(state, action)=>{\r\n            console.log(action)\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            console.log(state);\r\n            state.isAuthenticated=true;\r\n            return action.payload.status;\r\n        },[userAuth.rejected]:(state, action)=>{\r\n            state.error = true;\r\n        },[userDeauth.fulfilled]:(state,action)=>{\r\n            state.isAuthenticated=false;\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            return action.payload.status;\r\n        },[userDeauth.rejected]:(state, action)=>{\r\n            return action.payload;\r\n        },[createCustomer.fulfilled]:(state, action)=>{\r\n            state.isAuthenticated=true;\r\n            state.user=action.payload.user;\r\n            state.links=action.payload.links;\r\n            return action.payload.status;\r\n        },[createCustomer.rejected]:(state, action)=>{\r\n            state.registrationError = true;\r\n        },[checkUsernameAvailability.fulfilled]:(state, action)=>{\r\n            state.availability = action.payload;\r\n        },[checkUsernameAvailability.rejected]:(state,action)=>{\r\n            state.availability = false;\r\n        }\r\n    }\r\n})\r\nexport const {setPassword,setUser,setUsername,setRegistrationAddress,setRegistrationName,setRegistrationEmail,setRegistrationPassword,setRegistrationUsername,setRegistrationPhone, setRegistrationConfirmPassword, setpasswordMatch, setcriteriaMatch}=authenticationSlice.actions;\r\nexport default authenticationSlice.reducer;"]},"metadata":{},"sourceType":"module"}