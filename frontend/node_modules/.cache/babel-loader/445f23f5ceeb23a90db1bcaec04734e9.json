{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geeta\\\\opticonnect\\\\frontend\\\\src\\\\components\\\\logout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { userDeauth } from '../slices/authentication/authenticationSlice';\nimport Loadingspinner from './Loadingspinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Logout() {\n  _s();\n\n  const {\n    isAuthenticated\n  } = useSelector(state => state.authentication);\n  const dispatch = useDispatch();\n  const loggingout = useRef(false);\n  useEffect(() => {\n    dispatch(userDeauth());\n    setTimeout(() => {\n      loggingout.current = true;\n    }, 2000); // eslint-disable-next-line\n  }, [isAuthenticated]);\n\n  if (isAuthenticated === true && loggingout.current === false) {\n    return /*#__PURE__*/_jsxDEV(Loadingspinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(Logout, \"z2gdpSpySaGu8AQdxiVUci/iSfo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Logout;\nexport default Logout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"sources":["C:/Users/Geeta/opticonnect/frontend/src/components/logout.js"],"names":["React","useEffect","useRef","useDispatch","useSelector","Redirect","userDeauth","Loadingspinner","Logout","isAuthenticated","state","authentication","dispatch","loggingout","setTimeout","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAAQC,UAAR,QAAyB,8CAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AACA,SAASC,MAAT,GAAiB;AAAA;;AACb,QAAM;AAACC,IAAAA;AAAD,MAAoBL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAArC;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,UAAU,GAAEX,MAAM,CAAC,KAAD,CAAxB;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACAQ,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,UAAU,CAACE,OAAX,GAAmB,IAAnB;AACH,KAFS,EAEP,IAFO,CAAV,CAFU,CAKV;AACH,GANQ,EAMP,CAACN,eAAD,CANO,CAAT;;AAOA,MAAGA,eAAe,KAAK,IAApB,IAA4BI,UAAU,CAACE,OAAX,KAAqB,KAApD,EAA0D;AACtD,wBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEK;AACD,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AAEF;;GAjBMP,M;UACqBJ,W,EACTD,W;;;KAFZK,M;AAoBT,eAAeA,MAAf","sourcesContent":["import React,{ useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport {userDeauth} from '../slices/authentication/authenticationSlice'\r\nimport Loadingspinner from './Loadingspinner';\r\nfunction Logout(){\r\n    const {isAuthenticated} = useSelector(state => state.authentication); \r\n    const dispatch = useDispatch();\r\n    const loggingout= useRef(false);\r\n    useEffect(()=>{\r\n        dispatch(userDeauth());\r\n        setTimeout(() => {\r\n            loggingout.current=true;\r\n        }, 2000);\r\n        // eslint-disable-next-line\r\n    },[isAuthenticated]);\r\n    if(isAuthenticated === true && loggingout.current===false){\r\n        return(<Loadingspinner/>)\r\n    }else{\r\n        return(<Redirect to='/'/>);\r\n    }\r\n      \r\n  }\r\n\r\n\r\nexport default Logout;\r\n"]},"metadata":{},"sourceType":"module"}