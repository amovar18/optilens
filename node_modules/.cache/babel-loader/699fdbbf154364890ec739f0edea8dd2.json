{"ast":null,"code":"var _jsxFileName = \"/Users/amogha18/optilens/frontend/src/components/Privateroutecustomer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRouteCustomer = _ref => {\n  _s();\n\n  let {\n    children,\n    ...rest\n  } = _ref;\n  const {\n    isAuthenticated,\n    userType\n  } = useSelector(state => state.authentication);\n\n  if (isAuthenticated === true && userType === 'customer') {\n    return {\n      children\n    };\n  } else {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this);\n  }\n};\n\n_s(PrivateRouteCustomer, \"NzTvi1k4NbQ6wM9K25SashlZyvo=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRouteCustomer;\nexport default PrivateRouteCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRouteCustomer\");","map":{"version":3,"sources":["/Users/amogha18/optilens/frontend/src/components/Privateroutecustomer.js"],"names":["React","useSelector","Navigate","Route","PrivateRouteCustomer","children","rest","isAuthenticated","userType","state","authentication"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAA+B,kBAA/B;;;AACA,MAAMC,oBAAoB,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAACC,IAAAA,QAAD;AAAW,OAAGC;AAAd,GAAwB;AAClD,QAAM;AAACC,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,MAA8BP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAA/C;;AACA,MAAGH,eAAe,KAAK,IAApB,IAA4BC,QAAQ,KAAK,UAA5C,EAAuD;AACnD,WACI;AAACH,MAAAA;AAAD,KADJ;AAGH,GAJD,MAIK;AACD,wBAAQ,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;AAEJ,CAVD;;GAAMD,oB;UACkCH,W;;;KADlCG,oB;AAYN,eAAeA,oBAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate, Route} from 'react-router-dom';\nconst PrivateRouteCustomer = ({children, ...rest}) => {\n    const {isAuthenticated, userType} = useSelector(state => state.authentication);\n    if(isAuthenticated === true && userType === 'customer'){\n        return (\n            {children}\n        );\n    }else{\n        return (<Navigate to='/'/>);  \n    }\n    \n};\n\nexport default PrivateRouteCustomer;"]},"metadata":{},"sourceType":"module"}