{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const userAuth = createAsyncThunk('authentication/userAuth', async (_, _ref) => {\n  let {\n    getState,\n    rejectWithValue\n  } = _ref;\n  const {\n    loginUsername,\n    loginPassword,\n    typeofuser\n  } = getState().authentication;\n\n  try {\n    const response = await axios.post('https://opticonnect-backend.herokuapp.com/auth/signin', {\n      'username': loginUsername,\n      'password': loginPassword,\n      'typeofuser': typeofuser\n    }, {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const refreshToken = createAsyncThunk('authentication/refreshToken', async (_, _ref2) => {\n  let {\n    getState,\n    rejectWithValue\n  } = _ref2;\n  const {\n    isAuthenticated\n  } = getState().authentication;\n\n  if (isAuthenticated === false) {\n    try {\n      const response = axios.get('public/api/controllers/authentication/getStatus.js', {\n        withCredentials: true\n      });\n      return (await response).data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n});\nexport const checkUsernameAvailability = createAsyncThunk('authentication/checkUsernameAvailability', async (_, _ref3) => {\n  let {\n    getState,\n    rejectWithValue\n  } = _ref3;\n  const {\n    Registration_username\n  } = getState().authentication;\n\n  if (Registration_username !== '') {\n    try {\n      const response = axios.get('https://opticonnect-backend.herokuapp.com/user/availability/' + Registration_username, {\n        withCredentials: true\n      });\n      return (await response).data;\n    } catch (err) {\n      return rejectWithValue(err.response.data);\n    }\n  }\n});\nexport const createCustomer = createAsyncThunk('authentication/create', async (_, _ref4) => {\n  let {\n    getState,\n    rejectWithValue\n  } = _ref4;\n  const {\n    Registration_username,\n    Registration_password,\n    Registration_name,\n    Registration_email,\n    Registration_address,\n    Registration_phone\n  } = getState().authentication;\n\n  try {\n    const response = axios.post('https://opticonnect-backend.herokuapp.com/user/create', {\n      'name': Registration_name,\n      'username': Registration_username,\n      'phone': Registration_phone,\n      'email': Registration_email,\n      'password': Registration_password,\n      'address': Registration_address\n    }, {\n      withCredentials: true\n    });\n    return (await response).data;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const userDeauth = createAsyncThunk('authentication/userDeauth', async (_, _ref5) => {\n  let {\n    rejectWithValue\n  } = _ref5;\n\n  try {\n    const response = await axios.get('https://opticonnect-backend.herokuapp.com/auth/signout', {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst authenticationSlice = createSlice({\n  name: 'authentication',\n  initialState: {\n    userType: '',\n    isAuthenticated: false,\n    fetched: false,\n    username: '',\n    error: '',\n    loginUsername: '',\n    loginPassword: '',\n    typeofuser: '',\n    loginerror: '',\n    links: [],\n    Registration_username: '',\n    Registration_password: '',\n    Registration_name: '',\n    Registration_email: '',\n    Registration_address: '',\n    Registration_phone: '',\n    Registration_confirm_password: '',\n    registrationError: '',\n    passwordMatch: '',\n    criteriaError: '',\n    availability: 'NaN',\n    errormessage: '',\n    isActive: ''\n  },\n  reducers: {\n    setValue: (state, action) => {\n      state[action.payload.name] = action.payload.value;\n    },\n    setpasswordMatch: (state, action) => {\n      state.passwordMatch = action.payload;\n    },\n    setcriteriaError: (state, action) => {\n      state.criteriaError = action.payload;\n    }\n  },\n  extraReducers: {\n    [userAuth.fulfilled]: (state, action) => {\n      // sign in user and set usertype links and user details;\n      state.userType = action.payload.userType;\n      state.links = action.payload.links;\n      state.isAuthenticated = true;\n    },\n    [userAuth.rejected]: (state, action) => {\n      // if authentication gets rejected due to some reason\n      state.loginerror = action.payload;\n    },\n    [userDeauth.fulfilled]: (state, action) => {\n      // user get successfully loggedout\n      state.isAuthenticated = false;\n      state.user = {};\n      state.userType = action.payload.userType;\n      state.links = action.payload.links;\n    },\n    [createCustomer.fulfilled]: (state, action) => {\n      // customer is created successfully\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      state.userType = action.payload.userType;\n    },\n    [createCustomer.rejected]: (state, action) => {\n      // problem in creating customer\n      state.registrationError = true;\n      state.errormessage = action.payload;\n    },\n    [checkUsernameAvailability.fulfilled]: (state, action) => {\n      state.availability = action.payload;\n    },\n    [checkUsernameAvailability.rejected]: (state, action) => {\n      state.availability = false;\n    },\n    [refreshToken.fulfilled]: (state, action) => {\n      // refresh the token if available\n      state.userType = action.payload.userType;\n      state.user = action.payload.user;\n      state.links = action.payload.links;\n      state.isAuthenticated = true;\n    },\n    [refreshToken.rejected]: (state, action) => {\n      state.isAuthenticated = false;\n      state.links = action.payload.links;\n      state.user = {};\n      state.userType = action.payload.userType;\n    }\n  }\n});\nexport const {\n  setValue,\n  setpasswordMatch,\n  setcriteriaError\n} = authenticationSlice.actions;\nexport default authenticationSlice.reducer;","map":{"version":3,"sources":["/Users/amogha18/optilens/src/slices/authentication/authenticationSlice.js"],"names":["createAsyncThunk","createSlice","axios","userAuth","_","getState","rejectWithValue","loginUsername","loginPassword","typeofuser","authentication","response","post","withCredentials","data","err","refreshToken","isAuthenticated","get","checkUsernameAvailability","Registration_username","createCustomer","Registration_password","Registration_name","Registration_email","Registration_address","Registration_phone","userDeauth","error","authenticationSlice","name","initialState","userType","fetched","username","loginerror","links","Registration_confirm_password","registrationError","passwordMatch","criteriaError","availability","errormessage","isActive","reducers","setValue","state","action","payload","value","setpasswordMatch","setcriteriaError","extraReducers","fulfilled","rejected","user","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const userAuth = createAsyncThunk(\n    'authentication/userAuth',\n    async (_, { getState , rejectWithValue} ) =>{\n        const {loginUsername,loginPassword,typeofuser} = getState().authentication;\n        try{\n            const response = await axios.post('https://opticonnect-backend.herokuapp.com/auth/signin',{\n                'username':loginUsername,\n                'password':loginPassword,\n                'typeofuser':typeofuser\n                },\n                {withCredentials:true});\n            return response.data;\n            \n            \n        }catch(err){\n            return rejectWithValue(err.response.data);\n        }\n    }\n)\nexport const refreshToken = createAsyncThunk(\n    'authentication/refreshToken',\n    async (_, { getState , rejectWithValue }) =>{\n        const {isAuthenticated} = getState().authentication;\n        if(isAuthenticated===false){\n            try{\n                const response = axios.get('public/api/controllers/authentication/getStatus.js',{withCredentials:true});\n                return (await response).data;\n            }catch(err){\n                return rejectWithValue(err.response.data);\n            }\n        }\n    }\n)\nexport const checkUsernameAvailability = createAsyncThunk(\n    'authentication/checkUsernameAvailability',\n    async (_, { getState, rejectWithValue } ) =>{\n        const {Registration_username} = getState().authentication;\n        if(Registration_username!==''){\n            try{\n                const response = axios.get('https://opticonnect-backend.herokuapp.com/user/availability/'+Registration_username,{withCredentials:true});\n                return (await response).data;\n            }catch(err){\n                return rejectWithValue(err.response.data);\n            }\n        }\n    }\n)\nexport const createCustomer = createAsyncThunk(\n    'authentication/create',\n    async (_, { getState , rejectWithValue} ) =>{\n        const {Registration_username,Registration_password,Registration_name,Registration_email,Registration_address,Registration_phone}=getState().authentication;\n        try{\n            const response = axios.post('https://opticonnect-backend.herokuapp.com/user/create',{\n                'name' : Registration_name,\n                'username' : Registration_username,\n                'phone' : Registration_phone,\n                'email' : Registration_email,\n                'password' : Registration_password,\n                'address': Registration_address\n            },{withCredentials:true});\n            return (await response).data;\n        }catch(err){\n            return rejectWithValue(err.response.data);\n        }\n    }\n)\n\nexport const userDeauth = createAsyncThunk(\n    'authentication/userDeauth',\n    async (_, {rejectWithValue}) =>{\n        try{\n            const response = await axios.get('https://opticonnect-backend.herokuapp.com/auth/signout',{withCredentials:true});\n            return response.data;\n        }catch(error){\n            return rejectWithValue(error.response.data);\n        }\n    }\n)\nconst authenticationSlice = createSlice({\n    name:'authentication',\n    initialState:{\n        userType:'',\n        isAuthenticated:false,\n        fetched:false,\n        username: '',\n        error:'',\n\n        loginUsername:'',\n        loginPassword:'',\n        typeofuser:'',\n        loginerror:'',\n                                \n        links:[],\n        \n        Registration_username:'',\n        Registration_password:'',\n        Registration_name:'',\n        Registration_email:'',\n        Registration_address:'',\n        Registration_phone:'',\n        Registration_confirm_password:'',\n        registrationError:'',\n        passwordMatch:'',\n        criteriaError:'',\n        availability:'NaN',\n        errormessage:'',\n        isActive:'',\n    },\n    reducers:{\n        setValue:(state,action)=>{\n            state[action.payload.name]=action.payload.value;\n        },setpasswordMatch:(state, action)=>{\n            state.passwordMatch = action.payload;\n        },setcriteriaError:(state, action)=>{\n            state.criteriaError = action.payload;\n        }\n    },\n    extraReducers:{\n        [userAuth.fulfilled]:(state, action)=>{\n            // sign in user and set usertype links and user details;\n            state.userType = action.payload.userType;\n            state.links = action.payload.links;\n            state.isAuthenticated = true;\n        },[userAuth.rejected]:(state, action)=>{\n            // if authentication gets rejected due to some reason\n            state.loginerror = action.payload;\n        },[userDeauth.fulfilled]:(state,action)=>{\n            // user get successfully loggedout\n            state.isAuthenticated=false;\n            state.user={};\n            state.userType=action.payload.userType;\n            state.links=action.payload.links;\n        },[createCustomer.fulfilled]:(state, action)=>{\n            // customer is created successfully\n            state.isAuthenticated=true;\n            state.user=action.payload.user;\n            state.links=action.payload.links;\n            state.userType= action.payload.userType;\n        },[createCustomer.rejected]:(state, action)=>{\n            // problem in creating customer\n            state.registrationError = true;\n            state.errormessage = action.payload;\n        },[checkUsernameAvailability.fulfilled]:(state, action)=>{\n            state.availability = action.payload;\n        },[checkUsernameAvailability.rejected]:(state,action)=>{\n            state.availability = false;\n        },[refreshToken.fulfilled]:(state,action)=>{\n            // refresh the token if available\n            state.userType = action.payload.userType;\n            state.user=action.payload.user;\n            state.links=action.payload.links;\n            state.isAuthenticated = true;\n        },[refreshToken.rejected]:(state, action)=>{\n            state.isAuthenticated = false;\n            state.links=action.payload.links;\n            state.user = {}; \n            state.userType = action.payload.userType;\n        }\n    }\n})\nexport const {setValue, setpasswordMatch, setcriteriaError} = authenticationSlice.actions;\nexport default authenticationSlice.reducer;"]},"metadata":{},"sourceType":"module"}