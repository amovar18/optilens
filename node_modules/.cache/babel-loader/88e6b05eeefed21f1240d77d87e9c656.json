{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const checkUsernameAvailability = createAsyncThunk('seller/checkUsernameAvailability', async (_, _ref) => {\n  let {\n    getState,\n    rejectWithValue\n  } = _ref;\n  const {\n    username\n  } = getState().seller;\n\n  if (username !== '') {\n    try {\n      const response = axios.get('https://opticonnect-backend.herokuapp.com/seller/availability/' + username, {\n        withCredentials: true\n      });\n      return (await response).data;\n    } catch (err) {\n      return rejectWithValue(err.response);\n    }\n  }\n});\nexport const createSeller = createAsyncThunk('seller/create', async (formData, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    await axios({\n      method: 'POST',\n      url: 'https://opticonnect-backend.herokuapp.com/seller/create',\n      withCredentials: true,\n      data: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      return response.data;\n    });\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nconst sellerSlice = createSlice({\n  name: 'seller',\n  initialState: {\n    email: '',\n    password: '',\n    confirm_password: '',\n    shopname: '',\n    owner: '',\n    username: '',\n    phone: '',\n    city: '',\n    state: '',\n    pincode: '',\n    address_line_1: '',\n    address_line_2: '',\n    area: '',\n    registrationError: '',\n    passwordMatch: 'NaN',\n    criteriaError: 'NaN',\n    availability: 'NaN',\n    success: '',\n    error: 'false',\n    errorMessage: ''\n  },\n  reducers: {\n    setValue: (state, action) => {\n      state[action.payload.name] = action.payload.value;\n    },\n    setpasswordMatch: (state, action) => {\n      state.passwordMatch = action.payload;\n    },\n    setcriteriaError: (state, action) => {\n      state.criteriaError = action.payload;\n    }\n  },\n  extraReducers: {\n    [createSeller.fulfilled]: (state, action) => {\n      state.success = true;\n    },\n    [createSeller.rejected]: (state, action) => {\n      state.error = true;\n      state.errorMessage = action.payload;\n    },\n    [checkUsernameAvailability.fulfilled]: (state, action) => {\n      state.availability = action.payload;\n    },\n    [checkUsernameAvailability.rejected]: (state, action) => {\n      state.availability = false;\n    }\n  }\n});\nexport const {\n  setValue,\n  setpasswordMatch,\n  setcriteriaError\n} = sellerSlice.actions;\nexport default sellerSlice.reducer;","map":{"version":3,"sources":["/Users/amogha18/optilens/src/slices/seller/sellerSlice.js"],"names":["createAsyncThunk","createSlice","axios","checkUsernameAvailability","_","getState","rejectWithValue","username","seller","response","get","withCredentials","data","err","createSeller","formData","method","url","headers","then","sellerSlice","name","initialState","email","password","confirm_password","shopname","owner","phone","city","state","pincode","address_line_1","address_line_2","area","registrationError","passwordMatch","criteriaError","availability","success","error","errorMessage","reducers","setValue","action","payload","value","setpasswordMatch","setcriteriaError","extraReducers","fulfilled","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const checkUsernameAvailability = createAsyncThunk(\n    'seller/checkUsernameAvailability',\n    async (_, { getState , rejectWithValue } ) =>{\n        const {username} = getState().seller;\n        if(username!==''){\n            try{\n                const response = axios.get('https://opticonnect-backend.herokuapp.com/seller/availability/'+username,{withCredentials:true});\n                return (await response).data;\n            }catch(err){\n                return rejectWithValue(err.response);\n            }\n        }\n    }\n)\nexport const createSeller = createAsyncThunk(\n    'seller/create',\n    async ( formData, {rejectWithValue} ) =>{        \n        try{\n            await axios({\n                method:'POST',\n                url:'https://opticonnect-backend.herokuapp.com/seller/create',\n                withCredentials:true,\n                data:formData,\n                headers:{'Content-Type': 'multipart/form-data'},\n            }).then((response)=>{\n                return response.data;\n            })\n        }catch(err){\n            return rejectWithValue(err.response.data);\n        }\n    }\n)\nconst sellerSlice = createSlice({\n    name:'seller',\n    initialState:{\n        email: '',\n        password:'',\n        confirm_password:'',\n        shopname:'',\n        owner:'',\n        username:'',\n        phone:'',\n        city:'',\n\t\tstate:'',\n\t\tpincode:'',\n\t\taddress_line_1:'',\n\t\taddress_line_2:'',\n\t\tarea:'',\n        registrationError:'',\n        passwordMatch:'NaN',\n        criteriaError:'NaN',\n        availability:'NaN',\n        \n        success:'',\n        error:'false',\n        errorMessage:''\n    },\n    reducers:{\n        setValue:(state,action)=>{\n            state[action.payload.name] = action.payload.value;\n        },setpasswordMatch:(state, action)=>{\n            state.passwordMatch = action.payload;\n        },setcriteriaError:(state, action)=>{\n            state.criteriaError = action.payload;\n        }\n    },\n    extraReducers:{\n        [createSeller.fulfilled]:(state, action)=>{\n            state.success = true;\n        },[createSeller.rejected]:(state, action)=>{\n            state.error = true;\n            state.errorMessage =  action.payload;\n        },[checkUsernameAvailability.fulfilled]:(state, action)=>{\n            state.availability = action.payload;\n        },[checkUsernameAvailability.rejected]:(state,action)=>{\n            state.availability = false;\n        }\n    }\n})\nexport const {setValue, setpasswordMatch, setcriteriaError}=sellerSlice.actions;\nexport default sellerSlice.reducer;"]},"metadata":{},"sourceType":"module"}