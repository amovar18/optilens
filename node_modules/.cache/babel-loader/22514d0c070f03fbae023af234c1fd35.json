{"ast":null,"code":"var _jsxFileName = \"/Users/amogha18/optilens/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router';\nimport { setValue, userAuth } from '../slices/authentication/authenticationSlice';\nimport Alert from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    isAuthenticated,\n    loginerror\n  } = useSelector(state => state.authentication);\n\n  const submitValueLog = e => {\n    e.preventDefault();\n    dispatch(userAuth());\n  };\n\n  if (isAuthenticated === true) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"lead\",\n        style: {\n          'fontSize': '1.5rem'\n        },\n        children: \"Login to your account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitValueLog,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Username\",\n          id: \"username\",\n          type: \"text\",\n          onChange: e => dispatch(setValue({\n            name: e.target.name,\n            value: e.target.value\n          })),\n          name: \"loginUsername\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 203\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Password\",\n          id: \"password\",\n          type: \"password\",\n          onChange: e => dispatch(setValue({\n            name: e.target.name,\n            value: e.target.value\n          })),\n          name: \"loginPassword\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 216\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            className: \"form-check-input\",\n            name: \"typeofuser\",\n            id: \"customer\",\n            value: \"customer\",\n            onChange: e => dispatch(setValue({\n              name: e.target.name,\n              value: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"customer\",\n            className: \"form-check-label\",\n            style: {\n              'color': '#000000'\n            },\n            children: \"Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            className: \"form-check-input\",\n            name: \"typeofuser\",\n            value: \"seller\",\n            onChange: e => dispatch(setValue({\n              name: e.target.name,\n              value: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"seller\",\n            className: \"form-check-label\",\n            style: {\n              'color': '#000000'\n            },\n            children: \"Seller\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), loginerror !== '' ? /*#__PURE__*/_jsxDEV(Alert, {\n          message: loginerror,\n          type: \"danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 41\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          tag: \"input\",\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Login, \"z3rnyIo78nJKwgU2qwlaSi9POOI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/amogha18/optilens/src/components/Login.js"],"names":["React","useDispatch","useSelector","Navigate","setValue","userAuth","Alert","Login","props","dispatch","isAuthenticated","loginerror","state","authentication","submitValueLog","e","preventDefault","name","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router';\nimport {setValue, userAuth } from '../slices/authentication/authenticationSlice';\nimport Alert from './Alert';\n\nexport default function Login(props){\n    const dispatch = useDispatch();\n    const {isAuthenticated , loginerror} = useSelector(state => state.authentication);\n    \n    const submitValueLog = (e) => {\n        e.preventDefault();\n        dispatch(userAuth());\n    }\n    if(isAuthenticated === true){\n        return(<Navigate to='/'/>);\n    }else{\n        return(\n            <div className='container-fluid'>\n                <h1 className='lead' style={{'fontSize':'1.5rem'}}>Login to your account</h1>\n                <form onSubmit={submitValueLog}>\n                    <input className='form-control' placeholder='Username' id='username' type='text' onChange={e => dispatch(setValue({name:e.target.name, value:e.target.value}))} name='loginUsername'/><br/>\n                    <input className='form-control' placeholder='Password' id='password' type='password' onChange={e => dispatch(setValue({name:e.target.name, value:e.target.value}))} name='loginPassword' required/><br/>\n                    <br/>\n                    <div className='form-check form-check-inline'>\n                        <input type='radio' className='form-check-input' name='typeofuser' id='customer' value='customer' onChange={e => dispatch(setValue({name:e.target.name, value:e.target.value}))}/>\n                        <label htmlFor='customer' className='form-check-label' style={{'color':'#000000'}}>Customer</label>\n                    </div>\n                    <div className='form-check form-check-inline'>\n                        <input type='radio' className='form-check-input' name='typeofuser' value='seller' onChange={e => dispatch(setValue({name:e.target.name, value:e.target.value}))}/>\n                        <label htmlFor='seller' className='form-check-label' style={{'color':'#000000'}}>Seller</label>\n                    </div>\n                    {loginerror !== '' ?<Alert message={loginerror} type='danger'/>:null}\n                    <br/><button tag='input' type='submit' className='btn btn-primary'>Submit</button>\n                </form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}