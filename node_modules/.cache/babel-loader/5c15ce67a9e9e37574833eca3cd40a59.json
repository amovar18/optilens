{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getSingle = createAsyncThunk('transaction/getSingle', async (id, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const response = await axios.delete('https://opticonnect-backend.herokuapp.com/cart/delete', {\n      withCredentials: true,\n      data: {\n        'pid': id\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const getAll = createAsyncThunk('transaction/getAll', async (_, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    const response = await axios.get('https://opticonnect-backend.herokuapp.com/transaction/', {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst transactionSlice = createSlice({\n  name: 'transaction',\n  initialState: {\n    transaction: [],\n    error: '',\n    fetched: 'loading'\n  },\n  reducers: {},\n  extraReducers: {\n    [getSingle.fulfilled]: (state, action) => {\n      state.fetched = true;\n      state.transaction = action.payload;\n    },\n    [getSingle.rejected]: (state, action) => {\n      state.fetched = true;\n      state.error = action.payload;\n    },\n    [getAll.fulfilled]: (state, action) => {\n      state.fetched = true;\n      state.transaction = action.payload;\n    },\n    [getAll.rejected]: (state, action) => {\n      state.fetched = true;\n      state.error = action.payload;\n    }\n  }\n});\nexport default transactionSlice.reducer;","map":{"version":3,"sources":["/Users/amogha18/optilens/frontend/src/slices/transaction/transactionSlice.js"],"names":["createAsyncThunk","createSlice","axios","getSingle","id","rejectWithValue","response","delete","withCredentials","data","error","getAll","_","get","transactionSlice","name","initialState","transaction","fetched","reducers","extraReducers","fulfilled","state","action","payload","rejected","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CACrC,uBADqC,EAErC,OAAOI,EAAP,WAA+B;AAAA,MAApB;AAACC,IAAAA;AAAD,GAAoB;;AAC3B,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,MAAN,CAAa,uDAAb,EAAqE;AAACC,MAAAA,eAAe,EAAC,IAAjB;AAAsBC,MAAAA,IAAI,EAAC;AAAC,eAAML;AAAP;AAA3B,KAArE,CAAvB;AACA,WAAOE,QAAQ,CAACG,IAAhB;AACH,GAHD,CAGC,OAAMC,KAAN,EAAY;AACT,WAAOL,eAAe,CAACK,KAAK,CAACJ,QAAN,CAAeG,IAAhB,CAAtB;AACH;AACJ,CAToC,CAAlC;AAWP,OAAO,MAAME,MAAM,GAAGX,gBAAgB,CAClC,oBADkC,EAElC,OAAOY,CAAP,YAA+B;AAAA,MAArB;AAAEP,IAAAA;AAAF,GAAqB;;AAC3B,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACW,GAAN,CAAU,wDAAV,EAAmE;AAACL,MAAAA,eAAe,EAAC;AAAjB,KAAnE,CAAvB;AACA,WAAOF,QAAQ,CAACG,IAAhB;AACH,GAHD,CAGC,OAAMC,KAAN,EAAY;AACT,WAAOL,eAAe,CAACK,KAAK,CAACJ,QAAN,CAAeG,IAAhB,CAAtB;AACH;AACJ,CATiC,CAA/B;AAWP,MAAMK,gBAAgB,GAAGb,WAAW,CAAC;AACjCc,EAAAA,IAAI,EAAC,aAD4B;AAEjCC,EAAAA,YAAY,EAAC;AACTC,IAAAA,WAAW,EAAC,EADH;AAETP,IAAAA,KAAK,EAAC,EAFG;AAGTQ,IAAAA,OAAO,EAAC;AAHC,GAFoB;AAOjCC,EAAAA,QAAQ,EAAC,EAPwB;AAQjCC,EAAAA,aAAa,EAAC;AACV,KAACjB,SAAS,CAACkB,SAAX,GAAsB,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAClCD,MAAAA,KAAK,CAACJ,OAAN,GAAc,IAAd;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAkBM,MAAM,CAACC,OAAzB;AAEH,KALS;AAKR,KAACrB,SAAS,CAACsB,QAAX,GAAqB,CAACH,KAAD,EAAOC,MAAP,KAAgB;AACnCD,MAAAA,KAAK,CAACJ,OAAN,GAAc,IAAd;AACAI,MAAAA,KAAK,CAACZ,KAAN,GAAYa,MAAM,CAACC,OAAnB;AACH,KARS;AAQR,KAACb,MAAM,CAACU,SAAR,GAAmB,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAClCD,MAAAA,KAAK,CAACJ,OAAN,GAAc,IAAd;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAkBM,MAAM,CAACC,OAAzB;AACH,KAXS;AAWR,KAACb,MAAM,CAACc,QAAR,GAAmB,CAACH,KAAD,EAAQC,MAAR,KAAiB;AAClCD,MAAAA,KAAK,CAACJ,OAAN,GAAc,IAAd;AACAI,MAAAA,KAAK,CAACZ,KAAN,GAAYa,MAAM,CAACC,OAAnB;AACH;AAdS;AARmB,CAAD,CAApC;AA0BA,eAAeV,gBAAgB,CAACY,OAAhC","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const getSingle = createAsyncThunk(\n    'transaction/getSingle',\n    async (id, {rejectWithValue})=>{\n        try{\n            const response = await axios.delete('https://opticonnect-backend.herokuapp.com/cart/delete',{withCredentials:true,data:{'pid':id}});\n            return response.data;\n        }catch(error){\n            return rejectWithValue(error.response.data);\n        }\n    }\n)\nexport const getAll = createAsyncThunk(\n    'transaction/getAll',\n    async (_, { rejectWithValue})=>{\n        try{\n            const response = await axios.get('https://opticonnect-backend.herokuapp.com/transaction/',{withCredentials:true});\n            return response.data;\n        }catch(error){\n            return rejectWithValue(error.response.data);\n        }\n    }\n)\nconst transactionSlice = createSlice({\n    name:'transaction',\n    initialState:{\n        transaction:[],\n        error:'',\n        fetched:'loading'\n    },\n    reducers:{},\n    extraReducers:{\n        [getSingle.fulfilled]:(state,action)=>{\n            state.fetched=true;\n            state.transaction=action.payload;\n            \n        },[getSingle.rejected]:(state,action)=>{\n            state.fetched=true;\n            state.error=action.payload;\n        },[getAll.fulfilled]:(state, action)=>{\n            state.fetched=true;\n            state.transaction=action.payload;\n        },[getAll.rejected]: (state, action)=>{\n            state.fetched=true;\n            state.error=action.payload;\n        }\n    }\n\n})\nexport default transactionSlice.reducer;"]},"metadata":{},"sourceType":"module"}