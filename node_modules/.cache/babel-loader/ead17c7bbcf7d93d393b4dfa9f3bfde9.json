{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const setdelivery = createAsyncThunk('order/setdelivery', async (_ref, _ref2) => {\n  let {\n    product_id,\n    transaction_id\n  } = _ref;\n  let {\n    getState,\n    rejectWithValue\n  } = _ref2;\n  const {\n    awb,\n    delivery_partner\n  } = getState().order;\n\n  try {\n    axios({\n      url: 'https://opticonnect-backend.herokuapp.com/order/setdelivery',\n      method: 'POST',\n      data: {\n        'product_id': product_id,\n        'transaction_id': transaction_id,\n        'awb': awb,\n        'delivery_partner': delivery_partner\n      }\n    }).then(response => {\n      return response.data;\n    });\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const getPending = createAsyncThunk('order/getPending', async (_, _ref3) => {\n  let {\n    rejectWithValue\n  } = _ref3;\n\n  try {\n    const response = await axios.get('https://opticonnect-backend.herokuapp.com/order/getallpending', {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const getAll = createAsyncThunk('order/getAll', async (_, _ref4) => {\n  let {\n    rejectWithValue\n  } = _ref4;\n\n  try {\n    const response = await axios.get('https://opticonnect-backend.herokuapp.com/order/getall', {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst orderSlice = createSlice({\n  name: 'order',\n  initialState: {\n    orders: [],\n    fetched: 'loading',\n    errorStatus: '',\n    errorMessage: '',\n    awb: '',\n    delivery_partner: ''\n  },\n  reducers: {\n    setValue: (state, action) => {\n      state[action.payload.name] = action.payload.value;\n    }\n  },\n  extraReducers: {\n    [getPending.fulfilled]: (state, action) => {\n      state.fetched = true;\n      state.order = action.payload;\n    },\n    [getPending.rejected]: (state, action) => {\n      state.fetched = true;\n      state.error = action.payload;\n    },\n    [getAll.fulfilled]: (state, action) => {\n      state.fetched = true;\n      state.orders = action.payload;\n    },\n    [getAll.rejected]: (state, action) => {\n      state.fetched = true;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  setValue\n} = orderSlice.actions;\nexport default orderSlice.reducer;","map":{"version":3,"sources":["/Users/amogha18/optilens/src/slices/order/orderSlice.js"],"names":["createAsyncThunk","createSlice","axios","setdelivery","product_id","transaction_id","getState","rejectWithValue","awb","delivery_partner","order","url","method","data","then","response","error","getPending","_","get","withCredentials","getAll","orderSlice","name","initialState","orders","fetched","errorStatus","errorMessage","reducers","setValue","state","action","payload","value","extraReducers","fulfilled","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const setdelivery = createAsyncThunk(\n    'order/setdelivery',\n    async ({product_id, transaction_id}, { getState , rejectWithValue})=>{\n        const {awb, delivery_partner} = getState().order;\n        try{\n            axios({\n                url:'https://opticonnect-backend.herokuapp.com/order/setdelivery',\n                method:'POST',\n                data:{\n                    'product_id':product_id,\n\t\t\t\t\t'transaction_id':transaction_id,\n\t\t\t\t\t'awb':awb,\n\t\t\t\t\t'delivery_partner':delivery_partner\n                }\n            }).then((response)=>{\n                return response.data;\n            });\n        }catch(error){\n            return rejectWithValue(error.response.data);\n        }\n    }\n)\nexport const getPending = createAsyncThunk(\n    'order/getPending',\n    async (_, { rejectWithValue})=>{\n        try{\n            const response = await axios.get('https://opticonnect-backend.herokuapp.com/order/getallpending',{withCredentials:true});\n            return response.data;\n        }catch(error){\n            return rejectWithValue(error.response.data);\n        }\n    }\n)\nexport const getAll = createAsyncThunk(\n    'order/getAll',\n    async (_, { rejectWithValue})=>{\n        try{\n            const response = await axios.get('https://opticonnect-backend.herokuapp.com/order/getall',{withCredentials:true});\n            return response.data;\n        }catch(error){\n            return rejectWithValue(error.response.data);\n        }\n    }\n)\nconst orderSlice = createSlice({\n    name:'order',\n    initialState:{\n        orders:[],\n        fetched:'loading',\n        errorStatus:'',\n        errorMessage:'',\n\n        awb:'',\n\t\tdelivery_partner:'',\n    },\n    reducers:{\n        setValue:(state, action)=>{\n            state[action.payload.name] = action.payload.value;\n        }\n    },\n    extraReducers:{\n        [getPending.fulfilled]:(state,action)=>{\n            state.fetched = true;\n            state.order = action.payload;\n        },[getPending.rejected]:(state,action)=>{\n            state.fetched = true;\n            state.error = action.payload;\n        },[getAll.fulfilled]:(state, action)=>{\n            state.fetched = true;\n            state.orders = action.payload;\n        },[getAll.rejected]: (state, action)=>{\n            state.fetched = true;\n            state.error = action.payload;\n        }\n    }\n\n})\nexport const {setValue} = orderSlice.actions;\nexport default orderSlice.reducer;"]},"metadata":{},"sourceType":"module"}